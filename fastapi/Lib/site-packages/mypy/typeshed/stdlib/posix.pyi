import sys

if sys.platform != "win32":
    # Actually defined here, but defining in os allows sharing code with windows
    from os import (
        CLD_CONTINUED as CLD_CONTINUED,
    )
    from os import (
        CLD_DUMPED as CLD_DUMPED,
    )
    from os import (
        CLD_EXITED as CLD_EXITED,
    )
    from os import (
        CLD_TRAPPED as CLD_TRAPPED,
    )
    from os import (
        EX_CANTCREAT as EX_CANTCREAT,
    )
    from os import (
        EX_CONFIG as EX_CONFIG,
    )
    from os import (
        EX_DATAERR as EX_DATAERR,
    )
    from os import (
        EX_IOERR as EX_IOERR,
    )
    from os import (
        EX_NOHOST as EX_NOHOST,
    )
    from os import (
        EX_NOINPUT as EX_NOINPUT,
    )
    from os import (
        EX_NOPERM as EX_NOPERM,
    )
    from os import (
        EX_NOTFOUND as EX_NOTFOUND,
    )
    from os import (
        EX_NOUSER as EX_NOUSER,
    )
    from os import (
        EX_OK as EX_OK,
    )
    from os import (
        EX_OSERR as EX_OSERR,
    )
    from os import (
        EX_OSFILE as EX_OSFILE,
    )
    from os import (
        EX_PROTOCOL as EX_PROTOCOL,
    )
    from os import (
        EX_SOFTWARE as EX_SOFTWARE,
    )
    from os import (
        EX_TEMPFAIL as EX_TEMPFAIL,
    )
    from os import (
        EX_UNAVAILABLE as EX_UNAVAILABLE,
    )
    from os import (
        EX_USAGE as EX_USAGE,
    )
    from os import (
        F_LOCK as F_LOCK,
    )
    from os import (
        F_OK as F_OK,
    )
    from os import (
        F_TEST as F_TEST,
    )
    from os import (
        F_TLOCK as F_TLOCK,
    )
    from os import (
        F_ULOCK as F_ULOCK,
    )
    from os import (
        O_APPEND as O_APPEND,
    )
    from os import (
        O_ASYNC as O_ASYNC,
    )
    from os import (
        O_CREAT as O_CREAT,
    )
    from os import (
        O_DIRECT as O_DIRECT,
    )
    from os import (
        O_DIRECTORY as O_DIRECTORY,
    )
    from os import (
        O_DSYNC as O_DSYNC,
    )
    from os import (
        O_EXCL as O_EXCL,
    )
    from os import (
        O_LARGEFILE as O_LARGEFILE,
    )
    from os import (
        O_NDELAY as O_NDELAY,
    )
    from os import (
        O_NOATIME as O_NOATIME,
    )
    from os import (
        O_NOCTTY as O_NOCTTY,
    )
    from os import (
        O_NOFOLLOW as O_NOFOLLOW,
    )
    from os import (
        O_NONBLOCK as O_NONBLOCK,
    )
    from os import (
        O_RDONLY as O_RDONLY,
    )
    from os import (
        O_RDWR as O_RDWR,
    )
    from os import (
        O_RSYNC as O_RSYNC,
    )
    from os import (
        O_SYNC as O_SYNC,
    )
    from os import (
        O_TRUNC as O_TRUNC,
    )
    from os import (
        O_WRONLY as O_WRONLY,
    )
    from os import (
        P_ALL as P_ALL,
    )
    from os import (
        P_PGID as P_PGID,
    )
    from os import (
        P_PID as P_PID,
    )
    from os import (
        PRIO_PGRP as PRIO_PGRP,
    )
    from os import (
        PRIO_PROCESS as PRIO_PROCESS,
    )
    from os import (
        PRIO_USER as PRIO_USER,
    )
    from os import (
        R_OK as R_OK,
    )
    from os import (
        RTLD_GLOBAL as RTLD_GLOBAL,
    )
    from os import (
        RTLD_LAZY as RTLD_LAZY,
    )
    from os import (
        RTLD_LOCAL as RTLD_LOCAL,
    )
    from os import (
        RTLD_NODELETE as RTLD_NODELETE,
    )
    from os import (
        RTLD_NOLOAD as RTLD_NOLOAD,
    )
    from os import (
        RTLD_NOW as RTLD_NOW,
    )
    from os import (
        SCHED_BATCH as SCHED_BATCH,
    )
    from os import (
        SCHED_FIFO as SCHED_FIFO,
    )
    from os import (
        SCHED_IDLE as SCHED_IDLE,
    )
    from os import (
        SCHED_OTHER as SCHED_OTHER,
    )
    from os import (
        SCHED_RESET_ON_FORK as SCHED_RESET_ON_FORK,
    )
    from os import (
        SCHED_RR as SCHED_RR,
    )
    from os import (
        SCHED_SPORADIC as SCHED_SPORADIC,
    )
    from os import (
        SEEK_DATA as SEEK_DATA,
    )
    from os import (
        SEEK_HOLE as SEEK_HOLE,
    )
    from os import (
        ST_NOSUID as ST_NOSUID,
    )
    from os import (
        ST_RDONLY as ST_RDONLY,
    )
    from os import (
        TMP_MAX as TMP_MAX,
    )
    from os import (
        W_OK as W_OK,
    )
    from os import (
        WCONTINUED as WCONTINUED,
    )
    from os import (
        WCOREDUMP as WCOREDUMP,
    )
    from os import (
        WEXITED as WEXITED,
    )
    from os import (
        WEXITSTATUS as WEXITSTATUS,
    )
    from os import (
        WIFCONTINUED as WIFCONTINUED,
    )
    from os import (
        WIFEXITED as WIFEXITED,
    )
    from os import (
        WIFSIGNALED as WIFSIGNALED,
    )
    from os import (
        WIFSTOPPED as WIFSTOPPED,
    )
    from os import (
        WNOHANG as WNOHANG,
    )
    from os import (
        WNOWAIT as WNOWAIT,
    )
    from os import (
        WSTOPPED as WSTOPPED,
    )
    from os import (
        WSTOPSIG as WSTOPSIG,
    )
    from os import (
        WTERMSIG as WTERMSIG,
    )
    from os import (
        WUNTRACED as WUNTRACED,
    )
    from os import (
        X_OK as X_OK,
    )
    from os import (
        DirEntry as DirEntry,
    )
    from os import (
        _exit as _exit,
    )
    from os import (
        abort as abort,
    )
    from os import (
        access as access,
    )
    from os import (
        chdir as chdir,
    )
    from os import (
        chmod as chmod,
    )
    from os import (
        chown as chown,
    )
    from os import (
        chroot as chroot,
    )
    from os import (
        close as close,
    )
    from os import (
        closerange as closerange,
    )
    from os import (
        confstr as confstr,
    )
    from os import (
        confstr_names as confstr_names,
    )
    from os import (
        cpu_count as cpu_count,
    )
    from os import (
        ctermid as ctermid,
    )
    from os import (
        device_encoding as device_encoding,
    )
    from os import (
        dup as dup,
    )
    from os import (
        dup2 as dup2,
    )
    from os import (
        error as error,
    )
    from os import (
        execv as execv,
    )
    from os import (
        execve as execve,
    )
    from os import (
        fchdir as fchdir,
    )
    from os import (
        fchmod as fchmod,
    )
    from os import (
        fchown as fchown,
    )
    from os import (
        fork as fork,
    )
    from os import (
        forkpty as forkpty,
    )
    from os import (
        fpathconf as fpathconf,
    )
    from os import (
        fspath as fspath,
    )
    from os import (
        fstat as fstat,
    )
    from os import (
        fstatvfs as fstatvfs,
    )
    from os import (
        fsync as fsync,
    )
    from os import (
        ftruncate as ftruncate,
    )
    from os import (
        get_blocking as get_blocking,
    )
    from os import (
        get_inheritable as get_inheritable,
    )
    from os import (
        get_terminal_size as get_terminal_size,
    )
    from os import (
        getcwd as getcwd,
    )
    from os import (
        getcwdb as getcwdb,
    )
    from os import (
        getegid as getegid,
    )
    from os import (
        geteuid as geteuid,
    )
    from os import (
        getgid as getgid,
    )
    from os import (
        getgrouplist as getgrouplist,
    )
    from os import (
        getgroups as getgroups,
    )
    from os import (
        getloadavg as getloadavg,
    )
    from os import (
        getlogin as getlogin,
    )
    from os import (
        getpgid as getpgid,
    )
    from os import (
        getpgrp as getpgrp,
    )
    from os import (
        getpid as getpid,
    )
    from os import (
        getppid as getppid,
    )
    from os import (
        getpriority as getpriority,
    )
    from os import (
        getsid as getsid,
    )
    from os import (
        getuid as getuid,
    )
    from os import (
        initgroups as initgroups,
    )
    from os import (
        isatty as isatty,
    )
    from os import (
        kill as kill,
    )
    from os import (
        killpg as killpg,
    )
    from os import (
        lchown as lchown,
    )
    from os import (
        link as link,
    )
    from os import (
        listdir as listdir,
    )
    from os import (
        lockf as lockf,
    )
    from os import (
        lseek as lseek,
    )
    from os import (
        lstat as lstat,
    )
    from os import (
        major as major,
    )
    from os import (
        makedev as makedev,
    )
    from os import (
        minor as minor,
    )
    from os import (
        mkdir as mkdir,
    )
    from os import (
        mkfifo as mkfifo,
    )
    from os import (
        mknod as mknod,
    )
    from os import (
        nice as nice,
    )
    from os import (
        open as open,
    )
    from os import (
        openpty as openpty,
    )
    from os import (
        pathconf as pathconf,
    )
    from os import (
        pathconf_names as pathconf_names,
    )
    from os import (
        pipe as pipe,
    )
    from os import (
        pread as pread,
    )
    from os import (
        putenv as putenv,
    )
    from os import (
        pwrite as pwrite,
    )
    from os import (
        read as read,
    )
    from os import (
        readlink as readlink,
    )
    from os import (
        readv as readv,
    )
    from os import (
        remove as remove,
    )
    from os import (
        rename as rename,
    )
    from os import (
        replace as replace,
    )
    from os import (
        rmdir as rmdir,
    )
    from os import (
        scandir as scandir,
    )
    from os import (
        sched_get_priority_max as sched_get_priority_max,
    )
    from os import (
        sched_get_priority_min as sched_get_priority_min,
    )
    from os import (
        sched_param as sched_param,
    )
    from os import (
        sched_yield as sched_yield,
    )
    from os import (
        sendfile as sendfile,
    )
    from os import (
        set_blocking as set_blocking,
    )
    from os import (
        set_inheritable as set_inheritable,
    )
    from os import (
        setegid as setegid,
    )
    from os import (
        seteuid as seteuid,
    )
    from os import (
        setgid as setgid,
    )
    from os import (
        setgroups as setgroups,
    )
    from os import (
        setpgid as setpgid,
    )
    from os import (
        setpgrp as setpgrp,
    )
    from os import (
        setpriority as setpriority,
    )
    from os import (
        setregid as setregid,
    )
    from os import (
        setreuid as setreuid,
    )
    from os import (
        setsid as setsid,
    )
    from os import (
        setuid as setuid,
    )
    from os import (
        stat as stat,
    )
    from os import (
        stat_result as stat_result,
    )
    from os import (
        statvfs as statvfs,
    )
    from os import (
        statvfs_result as statvfs_result,
    )
    from os import (
        strerror as strerror,
    )
    from os import (
        symlink as symlink,
    )
    from os import (
        sync as sync,
    )
    from os import (
        sysconf as sysconf,
    )
    from os import (
        sysconf_names as sysconf_names,
    )
    from os import (
        system as system,
    )
    from os import (
        tcgetpgrp as tcgetpgrp,
    )
    from os import (
        tcsetpgrp as tcsetpgrp,
    )
    from os import (
        terminal_size as terminal_size,
    )
    from os import (
        times as times,
    )
    from os import (
        times_result as times_result,
    )
    from os import (
        truncate as truncate,
    )
    from os import (
        ttyname as ttyname,
    )
    from os import (
        umask as umask,
    )
    from os import (
        uname as uname,
    )
    from os import (
        uname_result as uname_result,
    )
    from os import (
        unlink as unlink,
    )
    from os import (
        unsetenv as unsetenv,
    )
    from os import (
        urandom as urandom,
    )
    from os import (
        utime as utime,
    )
    from os import (
        wait as wait,
    )
    from os import (
        wait3 as wait3,
    )
    from os import (
        wait4 as wait4,
    )
    from os import (
        waitpid as waitpid,
    )
    from os import (
        write as write,
    )
    from os import (
        writev as writev,
    )

    if sys.platform == "linux":
        from os import (
            GRND_NONBLOCK as GRND_NONBLOCK,
        )
        from os import (
            GRND_RANDOM as GRND_RANDOM,
        )
        from os import (
            RTLD_DEEPBIND as RTLD_DEEPBIND,
        )
        from os import (
            XATTR_CREATE as XATTR_CREATE,
        )
        from os import (
            XATTR_REPLACE as XATTR_REPLACE,
        )
        from os import (
            XATTR_SIZE_MAX as XATTR_SIZE_MAX,
        )
        from os import (
            getrandom as getrandom,
        )
        from os import (
            getxattr as getxattr,
        )
        from os import (
            listxattr as listxattr,
        )
        from os import (
            removexattr as removexattr,
        )
        from os import (
            setxattr as setxattr,
        )
    else:
        from os import chflags as chflags
        from os import lchflags as lchflags
        from os import lchmod as lchmod

    if sys.platform != "darwin":
        from os import (
            POSIX_FADV_DONTNEED as POSIX_FADV_DONTNEED,
        )
        from os import (
            POSIX_FADV_NOREUSE as POSIX_FADV_NOREUSE,
        )
        from os import (
            POSIX_FADV_NORMAL as POSIX_FADV_NORMAL,
        )
        from os import (
            POSIX_FADV_RANDOM as POSIX_FADV_RANDOM,
        )
        from os import (
            POSIX_FADV_SEQUENTIAL as POSIX_FADV_SEQUENTIAL,
        )
        from os import (
            POSIX_FADV_WILLNEED as POSIX_FADV_WILLNEED,
        )
        from os import (
            fdatasync as fdatasync,
        )
        from os import (
            getresgid as getresgid,
        )
        from os import (
            getresuid as getresuid,
        )
        from os import (
            pipe2 as pipe2,
        )
        from os import (
            posix_fadvise as posix_fadvise,
        )
        from os import (
            posix_fallocate as posix_fallocate,
        )
        from os import (
            sched_getaffinity as sched_getaffinity,
        )
        from os import (
            sched_getparam as sched_getparam,
        )
        from os import (
            sched_getscheduler as sched_getscheduler,
        )
        from os import (
            sched_rr_get_interval as sched_rr_get_interval,
        )
        from os import (
            sched_setaffinity as sched_setaffinity,
        )
        from os import (
            sched_setparam as sched_setparam,
        )
        from os import (
            sched_setscheduler as sched_setscheduler,
        )
        from os import (
            setresgid as setresgid,
        )
        from os import (
            setresuid as setresuid,
        )
        from os import (
            waitid as waitid,
        )
        from os import (
            waitid_result as waitid_result,
        )

        if sys.version_info >= (3, 10):
            from os import RWF_APPEND as RWF_APPEND

    if sys.version_info >= (3, 11):
        from os import login_tty as login_tty

    if sys.version_info >= (3, 9):
        from os import CLD_KILLED as CLD_KILLED
        from os import CLD_STOPPED as CLD_STOPPED
        from os import waitstatus_to_exitcode as waitstatus_to_exitcode

        if sys.platform == "linux":
            from os import P_PIDFD as P_PIDFD
            from os import pidfd_open as pidfd_open

    if sys.version_info >= (3, 8):
        from os import (
            POSIX_SPAWN_CLOSE as POSIX_SPAWN_CLOSE,
        )
        from os import (
            POSIX_SPAWN_DUP2 as POSIX_SPAWN_DUP2,
        )
        from os import (
            POSIX_SPAWN_OPEN as POSIX_SPAWN_OPEN,
        )
        from os import (
            posix_spawn as posix_spawn,
        )
        from os import (
            posix_spawnp as posix_spawnp,
        )

        if sys.platform == "linux":
            from os import (
                MFD_ALLOW_SEALING as MFD_ALLOW_SEALING,
            )
            from os import (
                MFD_CLOEXEC as MFD_CLOEXEC,
            )
            from os import (
                MFD_HUGE_1GB as MFD_HUGE_1GB,
            )
            from os import (
                MFD_HUGE_1MB as MFD_HUGE_1MB,
            )
            from os import (
                MFD_HUGE_2GB as MFD_HUGE_2GB,
            )
            from os import (
                MFD_HUGE_2MB as MFD_HUGE_2MB,
            )
            from os import (
                MFD_HUGE_8MB as MFD_HUGE_8MB,
            )
            from os import (
                MFD_HUGE_16GB as MFD_HUGE_16GB,
            )
            from os import (
                MFD_HUGE_16MB as MFD_HUGE_16MB,
            )
            from os import (
                MFD_HUGE_32MB as MFD_HUGE_32MB,
            )
            from os import (
                MFD_HUGE_64KB as MFD_HUGE_64KB,
            )
            from os import (
                MFD_HUGE_256MB as MFD_HUGE_256MB,
            )
            from os import (
                MFD_HUGE_512KB as MFD_HUGE_512KB,
            )
            from os import (
                MFD_HUGE_512MB as MFD_HUGE_512MB,
            )
            from os import (
                MFD_HUGE_MASK as MFD_HUGE_MASK,
            )
            from os import (
                MFD_HUGE_SHIFT as MFD_HUGE_SHIFT,
            )
            from os import (
                MFD_HUGETLB as MFD_HUGETLB,
            )
            from os import (
                copy_file_range as copy_file_range,
            )
            from os import (
                memfd_create as memfd_create,
            )
    from os import preadv as preadv
    from os import pwritev as pwritev
    from os import register_at_fork as register_at_fork

    if sys.platform != "darwin":
        from os import RWF_DSYNC as RWF_DSYNC
        from os import RWF_HIPRI as RWF_HIPRI
        from os import RWF_NOWAIT as RWF_NOWAIT
        from os import RWF_SYNC as RWF_SYNC

    # Not same as os.environ or os.environb
    # Because of this variable, we can't do "from posix import *" in os/__init__.pyi
    environ: dict[bytes, bytes]
