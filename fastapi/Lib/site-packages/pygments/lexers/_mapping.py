# Automatically generated by scripts/gen_mapfiles.py.
# DO NOT EDIT BY HAND; run `tox -e mapfiles` instead.

LEXERS = {
    "ABAPLexer": (
        "pygments.lexers.business",
        "ABAP",
        ("abap",),
        ("*.abap", "*.ABAP"),
        ("text/x-abap",),
    ),
    "AMDGPULexer": ("pygments.lexers.amdgpu", "AMDGPU", ("amdgpu",), ("*.isa",), ()),
    "APLLexer": (
        "pygments.lexers.apl",
        "APL",
        ("apl",),
        ("*.apl", "*.aplf", "*.aplo", "*.apln", "*.aplc", "*.apli", "*.dyalog"),
        (),
    ),
    "AbnfLexer": (
        "pygments.lexers.grammar_notation",
        "ABNF",
        ("abnf",),
        ("*.abnf",),
        ("text/x-abnf",),
    ),
    "ActionScript3Lexer": (
        "pygments.lexers.actionscript",
        "ActionScript 3",
        ("actionscript3", "as3"),
        ("*.as",),
        ("application/x-actionscript3", "text/x-actionscript3", "text/actionscript3"),
    ),
    "ActionScriptLexer": (
        "pygments.lexers.actionscript",
        "ActionScript",
        ("actionscript", "as"),
        ("*.as",),
        ("application/x-actionscript", "text/x-actionscript", "text/actionscript"),
    ),
    "AdaLexer": (
        "pygments.lexers.ada",
        "Ada",
        ("ada", "ada95", "ada2005"),
        ("*.adb", "*.ads", "*.ada"),
        ("text/x-ada",),
    ),
    "AdlLexer": (
        "pygments.lexers.archetype",
        "ADL",
        ("adl",),
        ("*.adl", "*.adls", "*.adlf", "*.adlx"),
        (),
    ),
    "AgdaLexer": (
        "pygments.lexers.haskell",
        "Agda",
        ("agda",),
        ("*.agda",),
        ("text/x-agda",),
    ),
    "AheuiLexer": ("pygments.lexers.esoteric", "Aheui", ("aheui",), ("*.aheui",), ()),
    "AlloyLexer": (
        "pygments.lexers.dsls",
        "Alloy",
        ("alloy",),
        ("*.als",),
        ("text/x-alloy",),
    ),
    "AmbientTalkLexer": (
        "pygments.lexers.ambient",
        "AmbientTalk",
        ("ambienttalk", "ambienttalk/2", "at"),
        ("*.at",),
        ("text/x-ambienttalk",),
    ),
    "AmplLexer": ("pygments.lexers.ampl", "Ampl", ("ampl",), ("*.run",), ()),
    "Angular2HtmlLexer": (
        "pygments.lexers.templates",
        "HTML + Angular2",
        ("html+ng2",),
        ("*.ng2",),
        (),
    ),
    "Angular2Lexer": ("pygments.lexers.templates", "Angular2", ("ng2",), (), ()),
    "AntlrActionScriptLexer": (
        "pygments.lexers.parsers",
        "ANTLR With ActionScript Target",
        ("antlr-actionscript", "antlr-as"),
        ("*.G", "*.g"),
        (),
    ),
    "AntlrCSharpLexer": (
        "pygments.lexers.parsers",
        "ANTLR With C# Target",
        ("antlr-csharp", "antlr-c#"),
        ("*.G", "*.g"),
        (),
    ),
    "AntlrCppLexer": (
        "pygments.lexers.parsers",
        "ANTLR With CPP Target",
        ("antlr-cpp",),
        ("*.G", "*.g"),
        (),
    ),
    "AntlrJavaLexer": (
        "pygments.lexers.parsers",
        "ANTLR With Java Target",
        ("antlr-java",),
        ("*.G", "*.g"),
        (),
    ),
    "AntlrLexer": ("pygments.lexers.parsers", "ANTLR", ("antlr",), (), ()),
    "AntlrObjectiveCLexer": (
        "pygments.lexers.parsers",
        "ANTLR With ObjectiveC Target",
        ("antlr-objc",),
        ("*.G", "*.g"),
        (),
    ),
    "AntlrPerlLexer": (
        "pygments.lexers.parsers",
        "ANTLR With Perl Target",
        ("antlr-perl",),
        ("*.G", "*.g"),
        (),
    ),
    "AntlrPythonLexer": (
        "pygments.lexers.parsers",
        "ANTLR With Python Target",
        ("antlr-python",),
        ("*.G", "*.g"),
        (),
    ),
    "AntlrRubyLexer": (
        "pygments.lexers.parsers",
        "ANTLR With Ruby Target",
        ("antlr-ruby", "antlr-rb"),
        ("*.G", "*.g"),
        (),
    ),
    "ApacheConfLexer": (
        "pygments.lexers.configs",
        "ApacheConf",
        ("apacheconf", "aconf", "apache"),
        (".htaccess", "apache.conf", "apache2.conf"),
        ("text/x-apacheconf",),
    ),
    "AppleScriptLexer": (
        "pygments.lexers.scripting",
        "AppleScript",
        ("applescript",),
        ("*.applescript",),
        (),
    ),
    "ArduinoLexer": (
        "pygments.lexers.c_like",
        "Arduino",
        ("arduino",),
        ("*.ino",),
        ("text/x-arduino",),
    ),
    "ArrowLexer": ("pygments.lexers.arrow", "Arrow", ("arrow",), ("*.arw",), ()),
    "ArturoLexer": (
        "pygments.lexers.arturo",
        "Arturo",
        ("arturo", "art"),
        ("*.art",),
        (),
    ),
    "AscLexer": (
        "pygments.lexers.asc",
        "ASCII armored",
        ("asc", "pem"),
        (
            "*.asc",
            "*.pem",
            "id_dsa",
            "id_ecdsa",
            "id_ecdsa_sk",
            "id_ed25519",
            "id_ed25519_sk",
            "id_rsa",
        ),
        (
            "application/pgp-keys",
            "application/pgp-encrypted",
            "application/pgp-signature",
        ),
    ),
    "AspectJLexer": (
        "pygments.lexers.jvm",
        "AspectJ",
        ("aspectj",),
        ("*.aj",),
        ("text/x-aspectj",),
    ),
    "AsymptoteLexer": (
        "pygments.lexers.graphics",
        "Asymptote",
        ("asymptote", "asy"),
        ("*.asy",),
        ("text/x-asymptote",),
    ),
    "AugeasLexer": ("pygments.lexers.configs", "Augeas", ("augeas",), ("*.aug",), ()),
    "AutoItLexer": (
        "pygments.lexers.automation",
        "AutoIt",
        ("autoit",),
        ("*.au3",),
        ("text/x-autoit",),
    ),
    "AutohotkeyLexer": (
        "pygments.lexers.automation",
        "autohotkey",
        ("autohotkey", "ahk"),
        ("*.ahk", "*.ahkl"),
        ("text/x-autohotkey",),
    ),
    "AwkLexer": (
        "pygments.lexers.textedit",
        "Awk",
        ("awk", "gawk", "mawk", "nawk"),
        ("*.awk",),
        ("application/x-awk",),
    ),
    "BBCBasicLexer": (
        "pygments.lexers.basic",
        "BBC Basic",
        ("bbcbasic",),
        ("*.bbc",),
        (),
    ),
    "BBCodeLexer": (
        "pygments.lexers.markup",
        "BBCode",
        ("bbcode",),
        (),
        ("text/x-bbcode",),
    ),
    "BCLexer": ("pygments.lexers.algebra", "BC", ("bc",), ("*.bc",), ()),
    "BSTLexer": (
        "pygments.lexers.bibtex",
        "BST",
        ("bst", "bst-pybtex"),
        ("*.bst",),
        (),
    ),
    "BareLexer": ("pygments.lexers.bare", "BARE", ("bare",), ("*.bare",), ()),
    "BaseMakefileLexer": (
        "pygments.lexers.make",
        "Base Makefile",
        ("basemake",),
        (),
        (),
    ),
    "BashLexer": (
        "pygments.lexers.shell",
        "Bash",
        ("bash", "sh", "ksh", "zsh", "shell"),
        (
            "*.sh",
            "*.ksh",
            "*.bash",
            "*.ebuild",
            "*.eclass",
            "*.exheres-0",
            "*.exlib",
            "*.zsh",
            ".bashrc",
            "bashrc",
            ".bash_*",
            "bash_*",
            "zshrc",
            ".zshrc",
            ".kshrc",
            "kshrc",
            "PKGBUILD",
        ),
        ("application/x-sh", "application/x-shellscript", "text/x-shellscript"),
    ),
    "BashSessionLexer": (
        "pygments.lexers.shell",
        "Bash Session",
        ("console", "shell-session"),
        ("*.sh-session", "*.shell-session"),
        ("application/x-shell-session", "application/x-sh-session"),
    ),
    "BatchLexer": (
        "pygments.lexers.shell",
        "Batchfile",
        ("batch", "bat", "dosbatch", "winbatch"),
        ("*.bat", "*.cmd"),
        ("application/x-dos-batch",),
    ),
    "BddLexer": (
        "pygments.lexers.bdd",
        "Bdd",
        ("bdd",),
        ("*.feature",),
        ("text/x-bdd",),
    ),
    "BefungeLexer": (
        "pygments.lexers.esoteric",
        "Befunge",
        ("befunge",),
        ("*.befunge",),
        ("application/x-befunge",),
    ),
    "BerryLexer": (
        "pygments.lexers.berry",
        "Berry",
        ("berry", "be"),
        ("*.be",),
        ("text/x-berry", "application/x-berry"),
    ),
    "BibTeXLexer": (
        "pygments.lexers.bibtex",
        "BibTeX",
        ("bibtex", "bib"),
        ("*.bib",),
        ("text/x-bibtex",),
    ),
    "BlitzBasicLexer": (
        "pygments.lexers.basic",
        "BlitzBasic",
        ("blitzbasic", "b3d", "bplus"),
        ("*.bb", "*.decls"),
        ("text/x-bb",),
    ),
    "BlitzMaxLexer": (
        "pygments.lexers.basic",
        "BlitzMax",
        ("blitzmax", "bmax"),
        ("*.bmx",),
        ("text/x-bmx",),
    ),
    "BnfLexer": (
        "pygments.lexers.grammar_notation",
        "BNF",
        ("bnf",),
        ("*.bnf",),
        ("text/x-bnf",),
    ),
    "BoaLexer": ("pygments.lexers.boa", "Boa", ("boa",), ("*.boa",), ()),
    "BooLexer": (
        "pygments.lexers.dotnet",
        "Boo",
        ("boo",),
        ("*.boo",),
        ("text/x-boo",),
    ),
    "BoogieLexer": (
        "pygments.lexers.verification",
        "Boogie",
        ("boogie",),
        ("*.bpl",),
        (),
    ),
    "BrainfuckLexer": (
        "pygments.lexers.esoteric",
        "Brainfuck",
        ("brainfuck", "bf"),
        ("*.bf", "*.b"),
        ("application/x-brainfuck",),
    ),
    "BugsLexer": (
        "pygments.lexers.modeling",
        "BUGS",
        ("bugs", "winbugs", "openbugs"),
        ("*.bug",),
        (),
    ),
    "CAmkESLexer": (
        "pygments.lexers.esoteric",
        "CAmkES",
        ("camkes", "idl4"),
        ("*.camkes", "*.idl4"),
        (),
    ),
    "CLexer": (
        "pygments.lexers.c_cpp",
        "C",
        ("c",),
        ("*.c", "*.h", "*.idc", "*.x[bp]m"),
        ("text/x-chdr", "text/x-csrc", "image/x-xbitmap", "image/x-xpixmap"),
    ),
    "CMakeLexer": (
        "pygments.lexers.make",
        "CMake",
        ("cmake",),
        ("*.cmake", "CMakeLists.txt"),
        ("text/x-cmake",),
    ),
    "CObjdumpLexer": (
        "pygments.lexers.asm",
        "c-objdump",
        ("c-objdump",),
        ("*.c-objdump",),
        ("text/x-c-objdump",),
    ),
    "CPSALexer": ("pygments.lexers.lisp", "CPSA", ("cpsa",), ("*.cpsa",), ()),
    "CSSUL4Lexer": ("pygments.lexers.ul4", "CSS+UL4", ("css+ul4",), ("*.cssul4",), ()),
    "CSharpAspxLexer": (
        "pygments.lexers.dotnet",
        "aspx-cs",
        ("aspx-cs",),
        ("*.aspx", "*.asax", "*.ascx", "*.ashx", "*.asmx", "*.axd"),
        (),
    ),
    "CSharpLexer": (
        "pygments.lexers.dotnet",
        "C#",
        ("csharp", "c#", "cs"),
        ("*.cs",),
        ("text/x-csharp",),
    ),
    "Ca65Lexer": ("pygments.lexers.asm", "ca65 assembler", ("ca65",), ("*.s",), ()),
    "CadlLexer": ("pygments.lexers.archetype", "cADL", ("cadl",), ("*.cadl",), ()),
    "CapDLLexer": ("pygments.lexers.esoteric", "CapDL", ("capdl",), ("*.cdl",), ()),
    "CapnProtoLexer": (
        "pygments.lexers.capnproto",
        "Cap'n Proto",
        ("capnp",),
        ("*.capnp",),
        (),
    ),
    "CarbonLexer": (
        "pygments.lexers.carbon",
        "Carbon",
        ("carbon",),
        ("*.carbon",),
        ("text/x-carbon",),
    ),
    "CbmBasicV2Lexer": (
        "pygments.lexers.basic",
        "CBM BASIC V2",
        ("cbmbas",),
        ("*.bas",),
        (),
    ),
    "CddlLexer": (
        "pygments.lexers.cddl",
        "CDDL",
        ("cddl",),
        ("*.cddl",),
        ("text/x-cddl",),
    ),
    "CeylonLexer": (
        "pygments.lexers.jvm",
        "Ceylon",
        ("ceylon",),
        ("*.ceylon",),
        ("text/x-ceylon",),
    ),
    "Cfengine3Lexer": (
        "pygments.lexers.configs",
        "CFEngine3",
        ("cfengine3", "cf3"),
        ("*.cf",),
        (),
    ),
    "ChaiscriptLexer": (
        "pygments.lexers.scripting",
        "ChaiScript",
        ("chaiscript", "chai"),
        ("*.chai",),
        ("text/x-chaiscript", "application/x-chaiscript"),
    ),
    "ChapelLexer": (
        "pygments.lexers.chapel",
        "Chapel",
        ("chapel", "chpl"),
        ("*.chpl",),
        (),
    ),
    "CharmciLexer": ("pygments.lexers.c_like", "Charmci", ("charmci",), ("*.ci",), ()),
    "CheetahHtmlLexer": (
        "pygments.lexers.templates",
        "HTML+Cheetah",
        ("html+cheetah", "html+spitfire", "htmlcheetah"),
        (),
        ("text/html+cheetah", "text/html+spitfire"),
    ),
    "CheetahJavascriptLexer": (
        "pygments.lexers.templates",
        "JavaScript+Cheetah",
        ("javascript+cheetah", "js+cheetah", "javascript+spitfire", "js+spitfire"),
        (),
        (
            "application/x-javascript+cheetah",
            "text/x-javascript+cheetah",
            "text/javascript+cheetah",
            "application/x-javascript+spitfire",
            "text/x-javascript+spitfire",
            "text/javascript+spitfire",
        ),
    ),
    "CheetahLexer": (
        "pygments.lexers.templates",
        "Cheetah",
        ("cheetah", "spitfire"),
        ("*.tmpl", "*.spt"),
        ("application/x-cheetah", "application/x-spitfire"),
    ),
    "CheetahXmlLexer": (
        "pygments.lexers.templates",
        "XML+Cheetah",
        ("xml+cheetah", "xml+spitfire"),
        (),
        ("application/xml+cheetah", "application/xml+spitfire"),
    ),
    "CirruLexer": (
        "pygments.lexers.webmisc",
        "Cirru",
        ("cirru",),
        ("*.cirru",),
        ("text/x-cirru",),
    ),
    "ClayLexer": (
        "pygments.lexers.c_like",
        "Clay",
        ("clay",),
        ("*.clay",),
        ("text/x-clay",),
    ),
    "CleanLexer": (
        "pygments.lexers.clean",
        "Clean",
        ("clean",),
        ("*.icl", "*.dcl"),
        (),
    ),
    "ClojureLexer": (
        "pygments.lexers.jvm",
        "Clojure",
        ("clojure", "clj"),
        ("*.clj", "*.cljc"),
        ("text/x-clojure", "application/x-clojure"),
    ),
    "ClojureScriptLexer": (
        "pygments.lexers.jvm",
        "ClojureScript",
        ("clojurescript", "cljs"),
        ("*.cljs",),
        ("text/x-clojurescript", "application/x-clojurescript"),
    ),
    "CobolFreeformatLexer": (
        "pygments.lexers.business",
        "COBOLFree",
        ("cobolfree",),
        ("*.cbl", "*.CBL"),
        (),
    ),
    "CobolLexer": (
        "pygments.lexers.business",
        "COBOL",
        ("cobol",),
        ("*.cob", "*.COB", "*.cpy", "*.CPY"),
        ("text/x-cobol",),
    ),
    "CoffeeScriptLexer": (
        "pygments.lexers.javascript",
        "CoffeeScript",
        ("coffeescript", "coffee-script", "coffee"),
        ("*.coffee",),
        ("text/coffeescript",),
    ),
    "ColdfusionCFCLexer": (
        "pygments.lexers.templates",
        "Coldfusion CFC",
        ("cfc",),
        ("*.cfc",),
        (),
    ),
    "ColdfusionHtmlLexer": (
        "pygments.lexers.templates",
        "Coldfusion HTML",
        ("cfm",),
        ("*.cfm", "*.cfml"),
        ("application/x-coldfusion",),
    ),
    "ColdfusionLexer": ("pygments.lexers.templates", "cfstatement", ("cfs",), (), ()),
    "Comal80Lexer": (
        "pygments.lexers.comal",
        "COMAL-80",
        ("comal", "comal80"),
        ("*.cml", "*.comal"),
        (),
    ),
    "CommonLispLexer": (
        "pygments.lexers.lisp",
        "Common Lisp",
        ("common-lisp", "cl", "lisp"),
        ("*.cl", "*.lisp"),
        ("text/x-common-lisp",),
    ),
    "ComponentPascalLexer": (
        "pygments.lexers.oberon",
        "Component Pascal",
        ("componentpascal", "cp"),
        ("*.cp", "*.cps"),
        ("text/x-component-pascal",),
    ),
    "CoqLexer": ("pygments.lexers.theorem", "Coq", ("coq",), ("*.v",), ("text/x-coq",)),
    "CplintLexer": (
        "pygments.lexers.cplint",
        "cplint",
        ("cplint",),
        ("*.ecl", "*.prolog", "*.pro", "*.pl", "*.P", "*.lpad", "*.cpl"),
        ("text/x-cplint",),
    ),
    "CppLexer": (
        "pygments.lexers.c_cpp",
        "C++",
        ("cpp", "c++"),
        (
            "*.cpp",
            "*.hpp",
            "*.c++",
            "*.h++",
            "*.cc",
            "*.hh",
            "*.cxx",
            "*.hxx",
            "*.C",
            "*.H",
            "*.cp",
            "*.CPP",
            "*.tpp",
        ),
        ("text/x-c++hdr", "text/x-c++src"),
    ),
    "CppObjdumpLexer": (
        "pygments.lexers.asm",
        "cpp-objdump",
        ("cpp-objdump", "c++-objdumb", "cxx-objdump"),
        ("*.cpp-objdump", "*.c++-objdump", "*.cxx-objdump"),
        ("text/x-cpp-objdump",),
    ),
    "CrmshLexer": (
        "pygments.lexers.dsls",
        "Crmsh",
        ("crmsh", "pcmk"),
        ("*.crmsh", "*.pcmk"),
        (),
    ),
    "CrocLexer": (
        "pygments.lexers.d",
        "Croc",
        ("croc",),
        ("*.croc",),
        ("text/x-crocsrc",),
    ),
    "CryptolLexer": (
        "pygments.lexers.haskell",
        "Cryptol",
        ("cryptol", "cry"),
        ("*.cry",),
        ("text/x-cryptol",),
    ),
    "CrystalLexer": (
        "pygments.lexers.crystal",
        "Crystal",
        ("cr", "crystal"),
        ("*.cr",),
        ("text/x-crystal",),
    ),
    "CsoundDocumentLexer": (
        "pygments.lexers.csound",
        "Csound Document",
        ("csound-document", "csound-csd"),
        ("*.csd",),
        (),
    ),
    "CsoundOrchestraLexer": (
        "pygments.lexers.csound",
        "Csound Orchestra",
        ("csound", "csound-orc"),
        ("*.orc", "*.udo"),
        (),
    ),
    "CsoundScoreLexer": (
        "pygments.lexers.csound",
        "Csound Score",
        ("csound-score", "csound-sco"),
        ("*.sco",),
        (),
    ),
    "CssDjangoLexer": (
        "pygments.lexers.templates",
        "CSS+Django/Jinja",
        ("css+django", "css+jinja"),
        ("*.css.j2", "*.css.jinja2"),
        ("text/css+django", "text/css+jinja"),
    ),
    "CssErbLexer": (
        "pygments.lexers.templates",
        "CSS+Ruby",
        ("css+ruby", "css+erb"),
        (),
        ("text/css+ruby",),
    ),
    "CssGenshiLexer": (
        "pygments.lexers.templates",
        "CSS+Genshi Text",
        ("css+genshitext", "css+genshi"),
        (),
        ("text/css+genshi",),
    ),
    "CssLexer": ("pygments.lexers.css", "CSS", ("css",), ("*.css",), ("text/css",)),
    "CssPhpLexer": (
        "pygments.lexers.templates",
        "CSS+PHP",
        ("css+php",),
        (),
        ("text/css+php",),
    ),
    "CssSmartyLexer": (
        "pygments.lexers.templates",
        "CSS+Smarty",
        ("css+smarty",),
        (),
        ("text/css+smarty",),
    ),
    "CudaLexer": (
        "pygments.lexers.c_like",
        "CUDA",
        ("cuda", "cu"),
        ("*.cu", "*.cuh"),
        ("text/x-cuda",),
    ),
    "CypherLexer": (
        "pygments.lexers.graph",
        "Cypher",
        ("cypher",),
        ("*.cyp", "*.cypher"),
        (),
    ),
    "CythonLexer": (
        "pygments.lexers.python",
        "Cython",
        ("cython", "pyx", "pyrex"),
        ("*.pyx", "*.pxd", "*.pxi"),
        ("text/x-cython", "application/x-cython"),
    ),
    "DLexer": ("pygments.lexers.d", "D", ("d",), ("*.d", "*.di"), ("text/x-dsrc",)),
    "DObjdumpLexer": (
        "pygments.lexers.asm",
        "d-objdump",
        ("d-objdump",),
        ("*.d-objdump",),
        ("text/x-d-objdump",),
    ),
    "DarcsPatchLexer": (
        "pygments.lexers.diff",
        "Darcs Patch",
        ("dpatch",),
        ("*.dpatch", "*.darcspatch"),
        (),
    ),
    "DartLexer": (
        "pygments.lexers.javascript",
        "Dart",
        ("dart",),
        ("*.dart",),
        ("text/x-dart",),
    ),
    "Dasm16Lexer": (
        "pygments.lexers.asm",
        "DASM16",
        ("dasm16",),
        ("*.dasm16", "*.dasm"),
        ("text/x-dasm16",),
    ),
    "DaxLexer": ("pygments.lexers.dax", "Dax", ("dax",), ("*.dax",), ()),
    "DebianControlLexer": (
        "pygments.lexers.installers",
        "Debian Control file",
        ("debcontrol", "control"),
        ("control",),
        (),
    ),
    "DelphiLexer": (
        "pygments.lexers.pascal",
        "Delphi",
        ("delphi", "pas", "pascal", "objectpascal"),
        ("*.pas", "*.dpr"),
        ("text/x-pascal",),
    ),
    "DevicetreeLexer": (
        "pygments.lexers.devicetree",
        "Devicetree",
        ("devicetree", "dts"),
        ("*.dts", "*.dtsi"),
        ("text/x-c",),
    ),
    "DgLexer": ("pygments.lexers.python", "dg", ("dg",), ("*.dg",), ("text/x-dg",)),
    "DiffLexer": (
        "pygments.lexers.diff",
        "Diff",
        ("diff", "udiff"),
        ("*.diff", "*.patch"),
        ("text/x-diff", "text/x-patch"),
    ),
    "DjangoLexer": (
        "pygments.lexers.templates",
        "Django/Jinja",
        ("django", "jinja"),
        (),
        ("application/x-django-templating", "application/x-jinja"),
    ),
    "DockerLexer": (
        "pygments.lexers.configs",
        "Docker",
        ("docker", "dockerfile"),
        ("Dockerfile", "*.docker"),
        ("text/x-dockerfile-config",),
    ),
    "DtdLexer": (
        "pygments.lexers.html",
        "DTD",
        ("dtd",),
        ("*.dtd",),
        ("application/xml-dtd",),
    ),
    "DuelLexer": (
        "pygments.lexers.webmisc",
        "Duel",
        ("duel", "jbst", "jsonml+bst"),
        ("*.duel", "*.jbst"),
        ("text/x-duel", "text/x-jbst"),
    ),
    "DylanConsoleLexer": (
        "pygments.lexers.dylan",
        "Dylan session",
        ("dylan-console", "dylan-repl"),
        ("*.dylan-console",),
        ("text/x-dylan-console",),
    ),
    "DylanLexer": (
        "pygments.lexers.dylan",
        "Dylan",
        ("dylan",),
        ("*.dylan", "*.dyl", "*.intr"),
        ("text/x-dylan",),
    ),
    "DylanLidLexer": (
        "pygments.lexers.dylan",
        "DylanLID",
        ("dylan-lid", "lid"),
        ("*.lid", "*.hdp"),
        ("text/x-dylan-lid",),
    ),
    "ECLLexer": (
        "pygments.lexers.ecl",
        "ECL",
        ("ecl",),
        ("*.ecl",),
        ("application/x-ecl",),
    ),
    "ECLexer": (
        "pygments.lexers.c_like",
        "eC",
        ("ec",),
        ("*.ec", "*.eh"),
        ("text/x-echdr", "text/x-ecsrc"),
    ),
    "EarlGreyLexer": (
        "pygments.lexers.javascript",
        "Earl Grey",
        ("earl-grey", "earlgrey", "eg"),
        ("*.eg",),
        ("text/x-earl-grey",),
    ),
    "EasytrieveLexer": (
        "pygments.lexers.scripting",
        "Easytrieve",
        ("easytrieve",),
        ("*.ezt", "*.mac"),
        ("text/x-easytrieve",),
    ),
    "EbnfLexer": (
        "pygments.lexers.parsers",
        "EBNF",
        ("ebnf",),
        ("*.ebnf",),
        ("text/x-ebnf",),
    ),
    "EiffelLexer": (
        "pygments.lexers.eiffel",
        "Eiffel",
        ("eiffel",),
        ("*.e",),
        ("text/x-eiffel",),
    ),
    "ElixirConsoleLexer": (
        "pygments.lexers.erlang",
        "Elixir iex session",
        ("iex",),
        (),
        ("text/x-elixir-shellsession",),
    ),
    "ElixirLexer": (
        "pygments.lexers.erlang",
        "Elixir",
        ("elixir", "ex", "exs"),
        ("*.ex", "*.eex", "*.exs", "*.leex"),
        ("text/x-elixir",),
    ),
    "ElmLexer": ("pygments.lexers.elm", "Elm", ("elm",), ("*.elm",), ("text/x-elm",)),
    "ElpiLexer": (
        "pygments.lexers.elpi",
        "Elpi",
        ("elpi",),
        ("*.elpi",),
        ("text/x-elpi",),
    ),
    "EmacsLispLexer": (
        "pygments.lexers.lisp",
        "EmacsLisp",
        ("emacs-lisp", "elisp", "emacs"),
        ("*.el",),
        ("text/x-elisp", "application/x-elisp"),
    ),
    "EmailLexer": (
        "pygments.lexers.email",
        "E-mail",
        ("email", "eml"),
        ("*.eml",),
        ("message/rfc822",),
    ),
    "ErbLexer": (
        "pygments.lexers.templates",
        "ERB",
        ("erb",),
        (),
        ("application/x-ruby-templating",),
    ),
    "ErlangLexer": (
        "pygments.lexers.erlang",
        "Erlang",
        ("erlang",),
        ("*.erl", "*.hrl", "*.es", "*.escript"),
        ("text/x-erlang",),
    ),
    "ErlangShellLexer": (
        "pygments.lexers.erlang",
        "Erlang erl session",
        ("erl",),
        ("*.erl-sh",),
        ("text/x-erl-shellsession",),
    ),
    "EvoqueHtmlLexer": (
        "pygments.lexers.templates",
        "HTML+Evoque",
        ("html+evoque",),
        ("*.html",),
        ("text/html+evoque",),
    ),
    "EvoqueLexer": (
        "pygments.lexers.templates",
        "Evoque",
        ("evoque",),
        ("*.evoque",),
        ("application/x-evoque",),
    ),
    "EvoqueXmlLexer": (
        "pygments.lexers.templates",
        "XML+Evoque",
        ("xml+evoque",),
        ("*.xml",),
        ("application/xml+evoque",),
    ),
    "ExeclineLexer": (
        "pygments.lexers.shell",
        "execline",
        ("execline",),
        ("*.exec",),
        (),
    ),
    "EzhilLexer": (
        "pygments.lexers.ezhil",
        "Ezhil",
        ("ezhil",),
        ("*.n",),
        ("text/x-ezhil",),
    ),
    "FSharpLexer": (
        "pygments.lexers.dotnet",
        "F#",
        ("fsharp", "f#"),
        ("*.fs", "*.fsi", "*.fsx"),
        ("text/x-fsharp",),
    ),
    "FStarLexer": (
        "pygments.lexers.ml",
        "FStar",
        ("fstar",),
        ("*.fst", "*.fsti"),
        ("text/x-fstar",),
    ),
    "FactorLexer": (
        "pygments.lexers.factor",
        "Factor",
        ("factor",),
        ("*.factor",),
        ("text/x-factor",),
    ),
    "FancyLexer": (
        "pygments.lexers.ruby",
        "Fancy",
        ("fancy", "fy"),
        ("*.fy", "*.fancypack"),
        ("text/x-fancysrc",),
    ),
    "FantomLexer": (
        "pygments.lexers.fantom",
        "Fantom",
        ("fan",),
        ("*.fan",),
        ("application/x-fantom",),
    ),
    "FelixLexer": (
        "pygments.lexers.felix",
        "Felix",
        ("felix", "flx"),
        ("*.flx", "*.flxh"),
        ("text/x-felix",),
    ),
    "FennelLexer": (
        "pygments.lexers.lisp",
        "Fennel",
        ("fennel", "fnl"),
        ("*.fnl",),
        (),
    ),
    "FiftLexer": ("pygments.lexers.fift", "Fift", ("fift", "fif"), ("*.fif",), ()),
    "FishShellLexer": (
        "pygments.lexers.shell",
        "Fish",
        ("fish", "fishshell"),
        ("*.fish", "*.load"),
        ("application/x-fish",),
    ),
    "FlatlineLexer": (
        "pygments.lexers.dsls",
        "Flatline",
        ("flatline",),
        (),
        ("text/x-flatline",),
    ),
    "FloScriptLexer": (
        "pygments.lexers.floscript",
        "FloScript",
        ("floscript", "flo"),
        ("*.flo",),
        (),
    ),
    "ForthLexer": (
        "pygments.lexers.forth",
        "Forth",
        ("forth",),
        ("*.frt", "*.fs"),
        ("application/x-forth",),
    ),
    "FortranFixedLexer": (
        "pygments.lexers.fortran",
        "FortranFixed",
        ("fortranfixed",),
        ("*.f", "*.F"),
        (),
    ),
    "FortranLexer": (
        "pygments.lexers.fortran",
        "Fortran",
        ("fortran", "f90"),
        ("*.f03", "*.f90", "*.F03", "*.F90"),
        ("text/x-fortran",),
    ),
    "FoxProLexer": (
        "pygments.lexers.foxpro",
        "FoxPro",
        ("foxpro", "vfp", "clipper", "xbase"),
        ("*.PRG", "*.prg"),
        (),
    ),
    "FreeFemLexer": (
        "pygments.lexers.freefem",
        "Freefem",
        ("freefem",),
        ("*.edp",),
        ("text/x-freefem",),
    ),
    "FuncLexer": (
        "pygments.lexers.func",
        "FunC",
        ("func", "fc"),
        ("*.fc", "*.func"),
        (),
    ),
    "FutharkLexer": (
        "pygments.lexers.futhark",
        "Futhark",
        ("futhark",),
        ("*.fut",),
        ("text/x-futhark",),
    ),
    "GAPConsoleLexer": (
        "pygments.lexers.algebra",
        "GAP session",
        ("gap-console", "gap-repl"),
        ("*.tst",),
        (),
    ),
    "GAPLexer": (
        "pygments.lexers.algebra",
        "GAP",
        ("gap",),
        ("*.g", "*.gd", "*.gi", "*.gap"),
        (),
    ),
    "GDScriptLexer": (
        "pygments.lexers.gdscript",
        "GDScript",
        ("gdscript", "gd"),
        ("*.gd",),
        ("text/x-gdscript", "application/x-gdscript"),
    ),
    "GLShaderLexer": (
        "pygments.lexers.graphics",
        "GLSL",
        ("glsl",),
        ("*.vert", "*.frag", "*.geo"),
        ("text/x-glslsrc",),
    ),
    "GSQLLexer": ("pygments.lexers.gsql", "GSQL", ("gsql",), ("*.gsql",), ()),
    "GasLexer": (
        "pygments.lexers.asm",
        "GAS",
        ("gas", "asm"),
        ("*.s", "*.S"),
        ("text/x-gas",),
    ),
    "GcodeLexer": (
        "pygments.lexers.gcodelexer",
        "g-code",
        ("gcode",),
        ("*.gcode",),
        (),
    ),
    "GenshiLexer": (
        "pygments.lexers.templates",
        "Genshi",
        ("genshi", "kid", "xml+genshi", "xml+kid"),
        ("*.kid",),
        ("application/x-genshi", "application/x-kid"),
    ),
    "GenshiTextLexer": (
        "pygments.lexers.templates",
        "Genshi Text",
        ("genshitext",),
        (),
        ("application/x-genshi-text", "text/x-genshi"),
    ),
    "GettextLexer": (
        "pygments.lexers.textfmts",
        "Gettext Catalog",
        ("pot", "po"),
        ("*.pot", "*.po"),
        ("application/x-gettext", "text/x-gettext", "text/gettext"),
    ),
    "GherkinLexer": (
        "pygments.lexers.testing",
        "Gherkin",
        ("gherkin", "cucumber"),
        ("*.feature",),
        ("text/x-gherkin",),
    ),
    "GnuplotLexer": (
        "pygments.lexers.graphics",
        "Gnuplot",
        ("gnuplot",),
        ("*.plot", "*.plt"),
        ("text/x-gnuplot",),
    ),
    "GoLexer": (
        "pygments.lexers.go",
        "Go",
        ("go", "golang"),
        ("*.go",),
        ("text/x-gosrc",),
    ),
    "GoloLexer": ("pygments.lexers.jvm", "Golo", ("golo",), ("*.golo",), ()),
    "GoodDataCLLexer": (
        "pygments.lexers.business",
        "GoodData-CL",
        ("gooddata-cl",),
        ("*.gdc",),
        ("text/x-gooddata-cl",),
    ),
    "GosuLexer": (
        "pygments.lexers.jvm",
        "Gosu",
        ("gosu",),
        ("*.gs", "*.gsx", "*.gsp", "*.vark"),
        ("text/x-gosu",),
    ),
    "GosuTemplateLexer": (
        "pygments.lexers.jvm",
        "Gosu Template",
        ("gst",),
        ("*.gst",),
        ("text/x-gosu-template",),
    ),
    "GraphvizLexer": (
        "pygments.lexers.graphviz",
        "Graphviz",
        ("graphviz", "dot"),
        ("*.gv", "*.dot"),
        ("text/x-graphviz", "text/vnd.graphviz"),
    ),
    "GroffLexer": (
        "pygments.lexers.markup",
        "Groff",
        ("groff", "nroff", "man"),
        ("*.[1-9]", "*.man", "*.1p", "*.3pm"),
        ("application/x-troff", "text/troff"),
    ),
    "GroovyLexer": (
        "pygments.lexers.jvm",
        "Groovy",
        ("groovy",),
        ("*.groovy", "*.gradle"),
        ("text/x-groovy",),
    ),
    "HLSLShaderLexer": (
        "pygments.lexers.graphics",
        "HLSL",
        ("hlsl",),
        ("*.hlsl", "*.hlsli"),
        ("text/x-hlsl",),
    ),
    "HTMLUL4Lexer": (
        "pygments.lexers.ul4",
        "HTML+UL4",
        ("html+ul4",),
        ("*.htmlul4",),
        (),
    ),
    "HamlLexer": (
        "pygments.lexers.html",
        "Haml",
        ("haml",),
        ("*.haml",),
        ("text/x-haml",),
    ),
    "HandlebarsHtmlLexer": (
        "pygments.lexers.templates",
        "HTML+Handlebars",
        ("html+handlebars",),
        ("*.handlebars", "*.hbs"),
        ("text/html+handlebars", "text/x-handlebars-template"),
    ),
    "HandlebarsLexer": (
        "pygments.lexers.templates",
        "Handlebars",
        ("handlebars",),
        (),
        (),
    ),
    "HaskellLexer": (
        "pygments.lexers.haskell",
        "Haskell",
        ("haskell", "hs"),
        ("*.hs",),
        ("text/x-haskell",),
    ),
    "HaxeLexer": (
        "pygments.lexers.haxe",
        "Haxe",
        ("haxe", "hxsl", "hx"),
        ("*.hx", "*.hxsl"),
        ("text/haxe", "text/x-haxe", "text/x-hx"),
    ),
    "HexdumpLexer": ("pygments.lexers.hexdump", "Hexdump", ("hexdump",), (), ()),
    "HsailLexer": (
        "pygments.lexers.asm",
        "HSAIL",
        ("hsail", "hsa"),
        ("*.hsail",),
        ("text/x-hsail",),
    ),
    "HspecLexer": ("pygments.lexers.haskell", "Hspec", ("hspec",), ("*Spec.hs",), ()),
    "HtmlDjangoLexer": (
        "pygments.lexers.templates",
        "HTML+Django/Jinja",
        ("html+django", "html+jinja", "htmldjango"),
        (
            "*.html.j2",
            "*.htm.j2",
            "*.xhtml.j2",
            "*.html.jinja2",
            "*.htm.jinja2",
            "*.xhtml.jinja2",
        ),
        ("text/html+django", "text/html+jinja"),
    ),
    "HtmlGenshiLexer": (
        "pygments.lexers.templates",
        "HTML+Genshi",
        ("html+genshi", "html+kid"),
        (),
        ("text/html+genshi",),
    ),
    "HtmlLexer": (
        "pygments.lexers.html",
        "HTML",
        ("html",),
        ("*.html", "*.htm", "*.xhtml", "*.xslt"),
        ("text/html", "application/xhtml+xml"),
    ),
    "HtmlPhpLexer": (
        "pygments.lexers.templates",
        "HTML+PHP",
        ("html+php",),
        ("*.phtml",),
        (
            "application/x-php",
            "application/x-httpd-php",
            "application/x-httpd-php3",
            "application/x-httpd-php4",
            "application/x-httpd-php5",
        ),
    ),
    "HtmlSmartyLexer": (
        "pygments.lexers.templates",
        "HTML+Smarty",
        ("html+smarty",),
        (),
        ("text/html+smarty",),
    ),
    "HttpLexer": ("pygments.lexers.textfmts", "HTTP", ("http",), (), ()),
    "HxmlLexer": ("pygments.lexers.haxe", "Hxml", ("haxeml", "hxml"), ("*.hxml",), ()),
    "HyLexer": (
        "pygments.lexers.lisp",
        "Hy",
        ("hylang",),
        ("*.hy",),
        ("text/x-hy", "application/x-hy"),
    ),
    "HybrisLexer": (
        "pygments.lexers.scripting",
        "Hybris",
        ("hybris", "hy"),
        ("*.hy", "*.hyb"),
        ("text/x-hybris", "application/x-hybris"),
    ),
    "IDLLexer": ("pygments.lexers.idl", "IDL", ("idl",), ("*.pro",), ("text/idl",)),
    "IconLexer": (
        "pygments.lexers.unicon",
        "Icon",
        ("icon",),
        ("*.icon", "*.ICON"),
        (),
    ),
    "IdrisLexer": (
        "pygments.lexers.haskell",
        "Idris",
        ("idris", "idr"),
        ("*.idr",),
        ("text/x-idris",),
    ),
    "IgorLexer": (
        "pygments.lexers.igor",
        "Igor",
        ("igor", "igorpro"),
        ("*.ipf",),
        ("text/ipf",),
    ),
    "Inform6Lexer": (
        "pygments.lexers.int_fiction",
        "Inform 6",
        ("inform6", "i6"),
        ("*.inf",),
        (),
    ),
    "Inform6TemplateLexer": (
        "pygments.lexers.int_fiction",
        "Inform 6 template",
        ("i6t",),
        ("*.i6t",),
        (),
    ),
    "Inform7Lexer": (
        "pygments.lexers.int_fiction",
        "Inform 7",
        ("inform7", "i7"),
        ("*.ni", "*.i7x"),
        (),
    ),
    "IniLexer": (
        "pygments.lexers.configs",
        "INI",
        ("ini", "cfg", "dosini"),
        (
            "*.ini",
            "*.cfg",
            "*.inf",
            ".editorconfig",
            "*.service",
            "*.socket",
            "*.device",
            "*.mount",
            "*.automount",
            "*.swap",
            "*.target",
            "*.path",
            "*.timer",
            "*.slice",
            "*.scope",
        ),
        ("text/x-ini", "text/inf"),
    ),
    "IoLexer": ("pygments.lexers.iolang", "Io", ("io",), ("*.io",), ("text/x-iosrc",)),
    "IokeLexer": (
        "pygments.lexers.jvm",
        "Ioke",
        ("ioke", "ik"),
        ("*.ik",),
        ("text/x-iokesrc",),
    ),
    "IrcLogsLexer": (
        "pygments.lexers.textfmts",
        "IRC logs",
        ("irc",),
        ("*.weechatlog",),
        ("text/x-irclog",),
    ),
    "IsabelleLexer": (
        "pygments.lexers.theorem",
        "Isabelle",
        ("isabelle",),
        ("*.thy",),
        ("text/x-isabelle",),
    ),
    "JLexer": ("pygments.lexers.j", "J", ("j",), ("*.ijs",), ("text/x-j",)),
    "JMESPathLexer": (
        "pygments.lexers.jmespath",
        "JMESPath",
        ("jmespath", "jp"),
        ("*.jp",),
        (),
    ),
    "JSLTLexer": (
        "pygments.lexers.jslt",
        "JSLT",
        ("jslt",),
        ("*.jslt",),
        ("text/x-jslt",),
    ),
    "JagsLexer": (
        "pygments.lexers.modeling",
        "JAGS",
        ("jags",),
        ("*.jag", "*.bug"),
        (),
    ),
    "JasminLexer": (
        "pygments.lexers.jvm",
        "Jasmin",
        ("jasmin", "jasminxt"),
        ("*.j",),
        (),
    ),
    "JavaLexer": (
        "pygments.lexers.jvm",
        "Java",
        ("java",),
        ("*.java",),
        ("text/x-java",),
    ),
    "JavascriptDjangoLexer": (
        "pygments.lexers.templates",
        "JavaScript+Django/Jinja",
        ("javascript+django", "js+django", "javascript+jinja", "js+jinja"),
        ("*.js.j2", "*.js.jinja2"),
        (
            "application/x-javascript+django",
            "application/x-javascript+jinja",
            "text/x-javascript+django",
            "text/x-javascript+jinja",
            "text/javascript+django",
            "text/javascript+jinja",
        ),
    ),
    "JavascriptErbLexer": (
        "pygments.lexers.templates",
        "JavaScript+Ruby",
        ("javascript+ruby", "js+ruby", "javascript+erb", "js+erb"),
        (),
        (
            "application/x-javascript+ruby",
            "text/x-javascript+ruby",
            "text/javascript+ruby",
        ),
    ),
    "JavascriptGenshiLexer": (
        "pygments.lexers.templates",
        "JavaScript+Genshi Text",
        ("js+genshitext", "js+genshi", "javascript+genshitext", "javascript+genshi"),
        (),
        (
            "application/x-javascript+genshi",
            "text/x-javascript+genshi",
            "text/javascript+genshi",
        ),
    ),
    "JavascriptLexer": (
        "pygments.lexers.javascript",
        "JavaScript",
        ("javascript", "js"),
        ("*.js", "*.jsm", "*.mjs", "*.cjs"),
        (
            "application/javascript",
            "application/x-javascript",
            "text/x-javascript",
            "text/javascript",
        ),
    ),
    "JavascriptPhpLexer": (
        "pygments.lexers.templates",
        "JavaScript+PHP",
        ("javascript+php", "js+php"),
        (),
        (
            "application/x-javascript+php",
            "text/x-javascript+php",
            "text/javascript+php",
        ),
    ),
    "JavascriptSmartyLexer": (
        "pygments.lexers.templates",
        "JavaScript+Smarty",
        ("javascript+smarty", "js+smarty"),
        (),
        (
            "application/x-javascript+smarty",
            "text/x-javascript+smarty",
            "text/javascript+smarty",
        ),
    ),
    "JavascriptUL4Lexer": (
        "pygments.lexers.ul4",
        "Javascript+UL4",
        ("js+ul4",),
        ("*.jsul4",),
        (),
    ),
    "JclLexer": (
        "pygments.lexers.scripting",
        "JCL",
        ("jcl",),
        ("*.jcl",),
        ("text/x-jcl",),
    ),
    "JsgfLexer": (
        "pygments.lexers.grammar_notation",
        "JSGF",
        ("jsgf",),
        ("*.jsgf",),
        ("application/jsgf", "application/x-jsgf", "text/jsgf"),
    ),
    "JsonBareObjectLexer": ("pygments.lexers.data", "JSONBareObject", (), (), ()),
    "JsonLdLexer": (
        "pygments.lexers.data",
        "JSON-LD",
        ("jsonld", "json-ld"),
        ("*.jsonld",),
        ("application/ld+json",),
    ),
    "JsonLexer": (
        "pygments.lexers.data",
        "JSON",
        ("json", "json-object"),
        ("*.json", "Pipfile.lock"),
        ("application/json", "application/json-object"),
    ),
    "JsonnetLexer": (
        "pygments.lexers.jsonnet",
        "Jsonnet",
        ("jsonnet",),
        ("*.jsonnet", "*.libsonnet"),
        (),
    ),
    "JspLexer": (
        "pygments.lexers.templates",
        "Java Server Page",
        ("jsp",),
        ("*.jsp",),
        ("application/x-jsp",),
    ),
    "JuliaConsoleLexer": (
        "pygments.lexers.julia",
        "Julia console",
        ("jlcon", "julia-repl"),
        (),
        (),
    ),
    "JuliaLexer": (
        "pygments.lexers.julia",
        "Julia",
        ("julia", "jl"),
        ("*.jl",),
        ("text/x-julia", "application/x-julia"),
    ),
    "JuttleLexer": (
        "pygments.lexers.javascript",
        "Juttle",
        ("juttle",),
        ("*.juttle",),
        ("application/juttle", "application/x-juttle", "text/x-juttle", "text/juttle"),
    ),
    "KLexer": ("pygments.lexers.q", "K", ("k",), ("*.k",), ()),
    "KalLexer": (
        "pygments.lexers.javascript",
        "Kal",
        ("kal",),
        ("*.kal",),
        ("text/kal", "application/kal"),
    ),
    "KconfigLexer": (
        "pygments.lexers.configs",
        "Kconfig",
        ("kconfig", "menuconfig", "linux-config", "kernel-config"),
        ("Kconfig*", "*Config.in*", "external.in*", "standard-modules.in"),
        ("text/x-kconfig",),
    ),
    "KernelLogLexer": (
        "pygments.lexers.textfmts",
        "Kernel log",
        ("kmsg", "dmesg"),
        ("*.kmsg", "*.dmesg"),
        (),
    ),
    "KokaLexer": (
        "pygments.lexers.haskell",
        "Koka",
        ("koka",),
        ("*.kk", "*.kki"),
        ("text/x-koka",),
    ),
    "KotlinLexer": (
        "pygments.lexers.jvm",
        "Kotlin",
        ("kotlin",),
        ("*.kt", "*.kts"),
        ("text/x-kotlin",),
    ),
    "KuinLexer": ("pygments.lexers.kuin", "Kuin", ("kuin",), ("*.kn",), ()),
    "LSLLexer": (
        "pygments.lexers.scripting",
        "LSL",
        ("lsl",),
        ("*.lsl",),
        ("text/x-lsl",),
    ),
    "LassoCssLexer": (
        "pygments.lexers.templates",
        "CSS+Lasso",
        ("css+lasso",),
        (),
        ("text/css+lasso",),
    ),
    "LassoHtmlLexer": (
        "pygments.lexers.templates",
        "HTML+Lasso",
        ("html+lasso",),
        (),
        (
            "text/html+lasso",
            "application/x-httpd-lasso",
            "application/x-httpd-lasso[89]",
        ),
    ),
    "LassoJavascriptLexer": (
        "pygments.lexers.templates",
        "JavaScript+Lasso",
        ("javascript+lasso", "js+lasso"),
        (),
        (
            "application/x-javascript+lasso",
            "text/x-javascript+lasso",
            "text/javascript+lasso",
        ),
    ),
    "LassoLexer": (
        "pygments.lexers.javascript",
        "Lasso",
        ("lasso", "lassoscript"),
        ("*.lasso", "*.lasso[89]"),
        ("text/x-lasso",),
    ),
    "LassoXmlLexer": (
        "pygments.lexers.templates",
        "XML+Lasso",
        ("xml+lasso",),
        (),
        ("application/xml+lasso",),
    ),
    "LeanLexer": (
        "pygments.lexers.theorem",
        "Lean",
        ("lean",),
        ("*.lean",),
        ("text/x-lean",),
    ),
    "LessCssLexer": (
        "pygments.lexers.css",
        "LessCss",
        ("less",),
        ("*.less",),
        ("text/x-less-css",),
    ),
    "LighttpdConfLexer": (
        "pygments.lexers.configs",
        "Lighttpd configuration file",
        ("lighttpd", "lighty"),
        ("lighttpd.conf",),
        ("text/x-lighttpd-conf",),
    ),
    "LilyPondLexer": (
        "pygments.lexers.lilypond",
        "LilyPond",
        ("lilypond",),
        ("*.ly",),
        (),
    ),
    "LimboLexer": (
        "pygments.lexers.inferno",
        "Limbo",
        ("limbo",),
        ("*.b",),
        ("text/limbo",),
    ),
    "LiquidLexer": (
        "pygments.lexers.templates",
        "liquid",
        ("liquid",),
        ("*.liquid",),
        (),
    ),
    "LiterateAgdaLexer": (
        "pygments.lexers.haskell",
        "Literate Agda",
        ("literate-agda", "lagda"),
        ("*.lagda",),
        ("text/x-literate-agda",),
    ),
    "LiterateCryptolLexer": (
        "pygments.lexers.haskell",
        "Literate Cryptol",
        ("literate-cryptol", "lcryptol", "lcry"),
        ("*.lcry",),
        ("text/x-literate-cryptol",),
    ),
    "LiterateHaskellLexer": (
        "pygments.lexers.haskell",
        "Literate Haskell",
        ("literate-haskell", "lhaskell", "lhs"),
        ("*.lhs",),
        ("text/x-literate-haskell",),
    ),
    "LiterateIdrisLexer": (
        "pygments.lexers.haskell",
        "Literate Idris",
        ("literate-idris", "lidris", "lidr"),
        ("*.lidr",),
        ("text/x-literate-idris",),
    ),
    "LiveScriptLexer": (
        "pygments.lexers.javascript",
        "LiveScript",
        ("livescript", "live-script"),
        ("*.ls",),
        ("text/livescript",),
    ),
    "LlvmLexer": (
        "pygments.lexers.asm",
        "LLVM",
        ("llvm",),
        ("*.ll",),
        ("text/x-llvm",),
    ),
    "LlvmMirBodyLexer": (
        "pygments.lexers.asm",
        "LLVM-MIR Body",
        ("llvm-mir-body",),
        (),
        (),
    ),
    "LlvmMirLexer": ("pygments.lexers.asm", "LLVM-MIR", ("llvm-mir",), ("*.mir",), ()),
    "LogosLexer": (
        "pygments.lexers.objective",
        "Logos",
        ("logos",),
        ("*.x", "*.xi", "*.xm", "*.xmi"),
        ("text/x-logos",),
    ),
    "LogtalkLexer": (
        "pygments.lexers.prolog",
        "Logtalk",
        ("logtalk",),
        ("*.lgt", "*.logtalk"),
        ("text/x-logtalk",),
    ),
    "LuaLexer": (
        "pygments.lexers.scripting",
        "Lua",
        ("lua",),
        ("*.lua", "*.wlua"),
        ("text/x-lua", "application/x-lua"),
    ),
    "MCFunctionLexer": (
        "pygments.lexers.minecraft",
        "MCFunction",
        ("mcfunction", "mcf"),
        ("*.mcfunction",),
        ("text/mcfunction",),
    ),
    "MCSchemaLexer": (
        "pygments.lexers.minecraft",
        "MCSchema",
        ("mcschema",),
        ("*.mcschema",),
        ("text/mcschema",),
    ),
    "MIMELexer": (
        "pygments.lexers.mime",
        "MIME",
        ("mime",),
        (),
        ("multipart/mixed", "multipart/related", "multipart/alternative"),
    ),
    "MIPSLexer": ("pygments.lexers.mips", "MIPS", ("mips",), ("*.mips", "*.MIPS"), ()),
    "MOOCodeLexer": (
        "pygments.lexers.scripting",
        "MOOCode",
        ("moocode", "moo"),
        ("*.moo",),
        ("text/x-moocode",),
    ),
    "MSDOSSessionLexer": (
        "pygments.lexers.shell",
        "MSDOS Session",
        ("doscon",),
        (),
        (),
    ),
    "Macaulay2Lexer": (
        "pygments.lexers.macaulay2",
        "Macaulay2",
        ("macaulay2",),
        ("*.m2",),
        (),
    ),
    "MakefileLexer": (
        "pygments.lexers.make",
        "Makefile",
        ("make", "makefile", "mf", "bsdmake"),
        ("*.mak", "*.mk", "Makefile", "makefile", "Makefile.*", "GNUmakefile"),
        ("text/x-makefile",),
    ),
    "MakoCssLexer": (
        "pygments.lexers.templates",
        "CSS+Mako",
        ("css+mako",),
        (),
        ("text/css+mako",),
    ),
    "MakoHtmlLexer": (
        "pygments.lexers.templates",
        "HTML+Mako",
        ("html+mako",),
        (),
        ("text/html+mako",),
    ),
    "MakoJavascriptLexer": (
        "pygments.lexers.templates",
        "JavaScript+Mako",
        ("javascript+mako", "js+mako"),
        (),
        (
            "application/x-javascript+mako",
            "text/x-javascript+mako",
            "text/javascript+mako",
        ),
    ),
    "MakoLexer": (
        "pygments.lexers.templates",
        "Mako",
        ("mako",),
        ("*.mao",),
        ("application/x-mako",),
    ),
    "MakoXmlLexer": (
        "pygments.lexers.templates",
        "XML+Mako",
        ("xml+mako",),
        (),
        ("application/xml+mako",),
    ),
    "MaqlLexer": (
        "pygments.lexers.business",
        "MAQL",
        ("maql",),
        ("*.maql",),
        ("text/x-gooddata-maql", "application/x-gooddata-maql"),
    ),
    "MarkdownLexer": (
        "pygments.lexers.markup",
        "Markdown",
        ("markdown", "md"),
        ("*.md", "*.markdown"),
        ("text/x-markdown",),
    ),
    "MaskLexer": (
        "pygments.lexers.javascript",
        "Mask",
        ("mask",),
        ("*.mask",),
        ("text/x-mask",),
    ),
    "MasonLexer": (
        "pygments.lexers.templates",
        "Mason",
        ("mason",),
        ("*.m", "*.mhtml", "*.mc", "*.mi", "autohandler", "dhandler"),
        ("application/x-mason",),
    ),
    "MathematicaLexer": (
        "pygments.lexers.algebra",
        "Mathematica",
        ("mathematica", "mma", "nb"),
        ("*.nb", "*.cdf", "*.nbp", "*.ma"),
        (
            "application/mathematica",
            "application/vnd.wolfram.mathematica",
            "application/vnd.wolfram.mathematica.package",
            "application/vnd.wolfram.cdf",
        ),
    ),
    "MatlabLexer": (
        "pygments.lexers.matlab",
        "Matlab",
        ("matlab",),
        ("*.m",),
        ("text/matlab",),
    ),
    "MatlabSessionLexer": (
        "pygments.lexers.matlab",
        "Matlab session",
        ("matlabsession",),
        (),
        (),
    ),
    "MaximaLexer": (
        "pygments.lexers.maxima",
        "Maxima",
        ("maxima", "macsyma"),
        ("*.mac", "*.max"),
        (),
    ),
    "MesonLexer": (
        "pygments.lexers.meson",
        "Meson",
        ("meson", "meson.build"),
        ("meson.build", "meson_options.txt"),
        ("text/x-meson",),
    ),
    "MiniDLexer": ("pygments.lexers.d", "MiniD", ("minid",), (), ("text/x-minidsrc",)),
    "MiniScriptLexer": (
        "pygments.lexers.scripting",
        "MiniScript",
        ("miniscript", "ms"),
        ("*.ms",),
        ("text/x-minicript", "application/x-miniscript"),
    ),
    "ModelicaLexer": (
        "pygments.lexers.modeling",
        "Modelica",
        ("modelica",),
        ("*.mo",),
        ("text/x-modelica",),
    ),
    "Modula2Lexer": (
        "pygments.lexers.modula2",
        "Modula-2",
        ("modula2", "m2"),
        ("*.def", "*.mod"),
        ("text/x-modula2",),
    ),
    "MoinWikiLexer": (
        "pygments.lexers.markup",
        "MoinMoin/Trac Wiki markup",
        ("trac-wiki", "moin"),
        (),
        ("text/x-trac-wiki",),
    ),
    "MonkeyLexer": (
        "pygments.lexers.basic",
        "Monkey",
        ("monkey",),
        ("*.monkey",),
        ("text/x-monkey",),
    ),
    "MonteLexer": ("pygments.lexers.monte", "Monte", ("monte",), ("*.mt",), ()),
    "MoonScriptLexer": (
        "pygments.lexers.scripting",
        "MoonScript",
        ("moonscript", "moon"),
        ("*.moon",),
        ("text/x-moonscript", "application/x-moonscript"),
    ),
    "MoselLexer": ("pygments.lexers.mosel", "Mosel", ("mosel",), ("*.mos",), ()),
    "MozPreprocCssLexer": (
        "pygments.lexers.markup",
        "CSS+mozpreproc",
        ("css+mozpreproc",),
        ("*.css.in",),
        (),
    ),
    "MozPreprocHashLexer": (
        "pygments.lexers.markup",
        "mozhashpreproc",
        ("mozhashpreproc",),
        (),
        (),
    ),
    "MozPreprocJavascriptLexer": (
        "pygments.lexers.markup",
        "Javascript+mozpreproc",
        ("javascript+mozpreproc",),
        ("*.js.in",),
        (),
    ),
    "MozPreprocPercentLexer": (
        "pygments.lexers.markup",
        "mozpercentpreproc",
        ("mozpercentpreproc",),
        (),
        (),
    ),
    "MozPreprocXulLexer": (
        "pygments.lexers.markup",
        "XUL+mozpreproc",
        ("xul+mozpreproc",),
        ("*.xul.in",),
        (),
    ),
    "MqlLexer": (
        "pygments.lexers.c_like",
        "MQL",
        ("mql", "mq4", "mq5", "mql4", "mql5"),
        ("*.mq4", "*.mq5", "*.mqh"),
        ("text/x-mql",),
    ),
    "MscgenLexer": (
        "pygments.lexers.dsls",
        "Mscgen",
        ("mscgen", "msc"),
        ("*.msc",),
        (),
    ),
    "MuPADLexer": ("pygments.lexers.algebra", "MuPAD", ("mupad",), ("*.mu",), ()),
    "MxmlLexer": ("pygments.lexers.actionscript", "MXML", ("mxml",), ("*.mxml",), ()),
    "MySqlLexer": ("pygments.lexers.sql", "MySQL", ("mysql",), (), ("text/x-mysql",)),
    "MyghtyCssLexer": (
        "pygments.lexers.templates",
        "CSS+Myghty",
        ("css+myghty",),
        (),
        ("text/css+myghty",),
    ),
    "MyghtyHtmlLexer": (
        "pygments.lexers.templates",
        "HTML+Myghty",
        ("html+myghty",),
        (),
        ("text/html+myghty",),
    ),
    "MyghtyJavascriptLexer": (
        "pygments.lexers.templates",
        "JavaScript+Myghty",
        ("javascript+myghty", "js+myghty"),
        (),
        (
            "application/x-javascript+myghty",
            "text/x-javascript+myghty",
            "text/javascript+mygthy",
        ),
    ),
    "MyghtyLexer": (
        "pygments.lexers.templates",
        "Myghty",
        ("myghty",),
        ("*.myt", "autodelegate"),
        ("application/x-myghty",),
    ),
    "MyghtyXmlLexer": (
        "pygments.lexers.templates",
        "XML+Myghty",
        ("xml+myghty",),
        (),
        ("application/xml+myghty",),
    ),
    "NCLLexer": ("pygments.lexers.ncl", "NCL", ("ncl",), ("*.ncl",), ("text/ncl",)),
    "NSISLexer": (
        "pygments.lexers.installers",
        "NSIS",
        ("nsis", "nsi", "nsh"),
        ("*.nsi", "*.nsh"),
        ("text/x-nsis",),
    ),
    "NasmLexer": (
        "pygments.lexers.asm",
        "NASM",
        ("nasm",),
        ("*.asm", "*.ASM", "*.nasm"),
        ("text/x-nasm",),
    ),
    "NasmObjdumpLexer": (
        "pygments.lexers.asm",
        "objdump-nasm",
        ("objdump-nasm",),
        ("*.objdump-intel",),
        ("text/x-nasm-objdump",),
    ),
    "NemerleLexer": (
        "pygments.lexers.dotnet",
        "Nemerle",
        ("nemerle",),
        ("*.n",),
        ("text/x-nemerle",),
    ),
    "NesCLexer": (
        "pygments.lexers.c_like",
        "nesC",
        ("nesc",),
        ("*.nc",),
        ("text/x-nescsrc",),
    ),
    "NestedTextLexer": (
        "pygments.lexers.configs",
        "NestedText",
        ("nestedtext", "nt"),
        ("*.nt",),
        (),
    ),
    "NewLispLexer": (
        "pygments.lexers.lisp",
        "NewLisp",
        ("newlisp",),
        ("*.lsp", "*.nl", "*.kif"),
        ("text/x-newlisp", "application/x-newlisp"),
    ),
    "NewspeakLexer": (
        "pygments.lexers.smalltalk",
        "Newspeak",
        ("newspeak",),
        ("*.ns2",),
        ("text/x-newspeak",),
    ),
    "NginxConfLexer": (
        "pygments.lexers.configs",
        "Nginx configuration file",
        ("nginx",),
        ("nginx.conf",),
        ("text/x-nginx-conf",),
    ),
    "NimrodLexer": (
        "pygments.lexers.nimrod",
        "Nimrod",
        ("nimrod", "nim"),
        ("*.nim", "*.nimrod"),
        ("text/x-nim",),
    ),
    "NitLexer": ("pygments.lexers.nit", "Nit", ("nit",), ("*.nit",), ()),
    "NixLexer": (
        "pygments.lexers.nix",
        "Nix",
        ("nixos", "nix"),
        ("*.nix",),
        ("text/x-nix",),
    ),
    "NodeConsoleLexer": (
        "pygments.lexers.javascript",
        "Node.js REPL console session",
        ("nodejsrepl",),
        (),
        ("text/x-nodejsrepl",),
    ),
    "NotmuchLexer": ("pygments.lexers.textfmts", "Notmuch", ("notmuch",), (), ()),
    "NuSMVLexer": ("pygments.lexers.smv", "NuSMV", ("nusmv",), ("*.smv",), ()),
    "NumPyLexer": ("pygments.lexers.python", "NumPy", ("numpy",), (), ()),
    "ObjdumpLexer": (
        "pygments.lexers.asm",
        "objdump",
        ("objdump",),
        ("*.objdump",),
        ("text/x-objdump",),
    ),
    "ObjectiveCLexer": (
        "pygments.lexers.objective",
        "Objective-C",
        ("objective-c", "objectivec", "obj-c", "objc"),
        ("*.m", "*.h"),
        ("text/x-objective-c",),
    ),
    "ObjectiveCppLexer": (
        "pygments.lexers.objective",
        "Objective-C++",
        ("objective-c++", "objectivec++", "obj-c++", "objc++"),
        ("*.mm", "*.hh"),
        ("text/x-objective-c++",),
    ),
    "ObjectiveJLexer": (
        "pygments.lexers.javascript",
        "Objective-J",
        ("objective-j", "objectivej", "obj-j", "objj"),
        ("*.j",),
        ("text/x-objective-j",),
    ),
    "OcamlLexer": (
        "pygments.lexers.ml",
        "OCaml",
        ("ocaml",),
        ("*.ml", "*.mli", "*.mll", "*.mly"),
        ("text/x-ocaml",),
    ),
    "OctaveLexer": (
        "pygments.lexers.matlab",
        "Octave",
        ("octave",),
        ("*.m",),
        ("text/octave",),
    ),
    "OdinLexer": (
        "pygments.lexers.archetype",
        "ODIN",
        ("odin",),
        ("*.odin",),
        ("text/odin",),
    ),
    "OmgIdlLexer": (
        "pygments.lexers.c_like",
        "OMG Interface Definition Language",
        ("omg-idl",),
        ("*.idl", "*.pidl"),
        (),
    ),
    "OocLexer": ("pygments.lexers.ooc", "Ooc", ("ooc",), ("*.ooc",), ("text/x-ooc",)),
    "OpaLexer": ("pygments.lexers.ml", "Opa", ("opa",), ("*.opa",), ("text/x-opa",)),
    "OpenEdgeLexer": (
        "pygments.lexers.business",
        "OpenEdge ABL",
        ("openedge", "abl", "progress"),
        ("*.p", "*.cls"),
        ("text/x-openedge", "application/x-openedge"),
    ),
    "OutputLexer": ("pygments.lexers.special", "Text output", ("output",), (), ()),
    "PacmanConfLexer": (
        "pygments.lexers.configs",
        "PacmanConf",
        ("pacmanconf",),
        ("pacman.conf",),
        (),
    ),
    "PanLexer": ("pygments.lexers.dsls", "Pan", ("pan",), ("*.pan",), ()),
    "ParaSailLexer": (
        "pygments.lexers.parasail",
        "ParaSail",
        ("parasail",),
        ("*.psi", "*.psl"),
        ("text/x-parasail",),
    ),
    "PawnLexer": (
        "pygments.lexers.pawn",
        "Pawn",
        ("pawn",),
        ("*.p", "*.pwn", "*.inc"),
        ("text/x-pawn",),
    ),
    "PegLexer": (
        "pygments.lexers.grammar_notation",
        "PEG",
        ("peg",),
        ("*.peg",),
        ("text/x-peg",),
    ),
    "Perl6Lexer": (
        "pygments.lexers.perl",
        "Perl6",
        ("perl6", "pl6", "raku"),
        (
            "*.pl",
            "*.pm",
            "*.nqp",
            "*.p6",
            "*.6pl",
            "*.p6l",
            "*.pl6",
            "*.6pm",
            "*.p6m",
            "*.pm6",
            "*.t",
            "*.raku",
            "*.rakumod",
            "*.rakutest",
            "*.rakudoc",
        ),
        ("text/x-perl6", "application/x-perl6"),
    ),
    "PerlLexer": (
        "pygments.lexers.perl",
        "Perl",
        ("perl", "pl"),
        ("*.pl", "*.pm", "*.t", "*.perl"),
        ("text/x-perl", "application/x-perl"),
    ),
    "PhixLexer": (
        "pygments.lexers.phix",
        "Phix",
        ("phix",),
        ("*.exw",),
        ("text/x-phix",),
    ),
    "PhpLexer": (
        "pygments.lexers.php",
        "PHP",
        ("php", "php3", "php4", "php5"),
        ("*.php", "*.php[345]", "*.inc"),
        ("text/x-php",),
    ),
    "PigLexer": ("pygments.lexers.jvm", "Pig", ("pig",), ("*.pig",), ("text/x-pig",)),
    "PikeLexer": (
        "pygments.lexers.c_like",
        "Pike",
        ("pike",),
        ("*.pike", "*.pmod"),
        ("text/x-pike",),
    ),
    "PkgConfigLexer": (
        "pygments.lexers.configs",
        "PkgConfig",
        ("pkgconfig",),
        ("*.pc",),
        (),
    ),
    "PlPgsqlLexer": (
        "pygments.lexers.sql",
        "PL/pgSQL",
        ("plpgsql",),
        (),
        ("text/x-plpgsql",),
    ),
    "PointlessLexer": (
        "pygments.lexers.pointless",
        "Pointless",
        ("pointless",),
        ("*.ptls",),
        (),
    ),
    "PonyLexer": ("pygments.lexers.pony", "Pony", ("pony",), ("*.pony",), ()),
    "PortugolLexer": (
        "pygments.lexers.pascal",
        "Portugol",
        ("portugol",),
        ("*.alg", "*.portugol"),
        (),
    ),
    "PostScriptLexer": (
        "pygments.lexers.graphics",
        "PostScript",
        ("postscript", "postscr"),
        ("*.ps", "*.eps"),
        ("application/postscript",),
    ),
    "PostgresConsoleLexer": (
        "pygments.lexers.sql",
        "PostgreSQL console (psql)",
        ("psql", "postgresql-console", "postgres-console"),
        (),
        ("text/x-postgresql-psql",),
    ),
    "PostgresExplainLexer": (
        "pygments.lexers.sql",
        "PostgreSQL EXPLAIN dialect",
        ("postgres-explain",),
        ("*.explain",),
        ("text/x-postgresql-explain",),
    ),
    "PostgresLexer": (
        "pygments.lexers.sql",
        "PostgreSQL SQL dialect",
        ("postgresql", "postgres"),
        (),
        ("text/x-postgresql",),
    ),
    "PovrayLexer": (
        "pygments.lexers.graphics",
        "POVRay",
        ("pov",),
        ("*.pov", "*.inc"),
        ("text/x-povray",),
    ),
    "PowerShellLexer": (
        "pygments.lexers.shell",
        "PowerShell",
        ("powershell", "pwsh", "posh", "ps1", "psm1"),
        ("*.ps1", "*.psm1"),
        ("text/x-powershell",),
    ),
    "PowerShellSessionLexer": (
        "pygments.lexers.shell",
        "PowerShell Session",
        ("pwsh-session", "ps1con"),
        (),
        (),
    ),
    "PraatLexer": (
        "pygments.lexers.praat",
        "Praat",
        ("praat",),
        ("*.praat", "*.proc", "*.psc"),
        (),
    ),
    "ProcfileLexer": (
        "pygments.lexers.procfile",
        "Procfile",
        ("procfile",),
        ("Procfile",),
        (),
    ),
    "PrologLexer": (
        "pygments.lexers.prolog",
        "Prolog",
        ("prolog",),
        ("*.ecl", "*.prolog", "*.pro", "*.pl"),
        ("text/x-prolog",),
    ),
    "PromQLLexer": ("pygments.lexers.promql", "PromQL", ("promql",), ("*.promql",), ()),
    "PropertiesLexer": (
        "pygments.lexers.configs",
        "Properties",
        ("properties", "jproperties"),
        ("*.properties",),
        ("text/x-java-properties",),
    ),
    "ProtoBufLexer": (
        "pygments.lexers.dsls",
        "Protocol Buffer",
        ("protobuf", "proto"),
        ("*.proto",),
        (),
    ),
    "PsyshConsoleLexer": (
        "pygments.lexers.php",
        "PsySH console session for PHP",
        ("psysh",),
        (),
        (),
    ),
    "PugLexer": (
        "pygments.lexers.html",
        "Pug",
        ("pug", "jade"),
        ("*.pug", "*.jade"),
        ("text/x-pug", "text/x-jade"),
    ),
    "PuppetLexer": ("pygments.lexers.dsls", "Puppet", ("puppet",), ("*.pp",), ()),
    "PyPyLogLexer": (
        "pygments.lexers.console",
        "PyPy Log",
        ("pypylog", "pypy"),
        ("*.pypylog",),
        ("application/x-pypylog",),
    ),
    "Python2Lexer": (
        "pygments.lexers.python",
        "Python 2.x",
        ("python2", "py2"),
        (),
        ("text/x-python2", "application/x-python2"),
    ),
    "Python2TracebackLexer": (
        "pygments.lexers.python",
        "Python 2.x Traceback",
        ("py2tb",),
        ("*.py2tb",),
        ("text/x-python2-traceback",),
    ),
    "PythonConsoleLexer": (
        "pygments.lexers.python",
        "Python console session",
        ("pycon",),
        (),
        ("text/x-python-doctest",),
    ),
    "PythonLexer": (
        "pygments.lexers.python",
        "Python",
        ("python", "py", "sage", "python3", "py3"),
        (
            "*.py",
            "*.pyw",
            "*.pyi",
            "*.jy",
            "*.sage",
            "*.sc",
            "SConstruct",
            "SConscript",
            "*.bzl",
            "BUCK",
            "BUILD",
            "BUILD.bazel",
            "WORKSPACE",
            "*.tac",
        ),
        (
            "text/x-python",
            "application/x-python",
            "text/x-python3",
            "application/x-python3",
        ),
    ),
    "PythonTracebackLexer": (
        "pygments.lexers.python",
        "Python Traceback",
        ("pytb", "py3tb"),
        ("*.pytb", "*.py3tb"),
        ("text/x-python-traceback", "text/x-python3-traceback"),
    ),
    "PythonUL4Lexer": (
        "pygments.lexers.ul4",
        "Python+UL4",
        ("py+ul4",),
        ("*.pyul4",),
        (),
    ),
    "QBasicLexer": (
        "pygments.lexers.basic",
        "QBasic",
        ("qbasic", "basic"),
        ("*.BAS", "*.bas"),
        ("text/basic",),
    ),
    "QLexer": ("pygments.lexers.q", "Q", ("q",), ("*.q",), ()),
    "QVToLexer": ("pygments.lexers.qvt", "QVTO", ("qvto", "qvt"), ("*.qvto",), ()),
    "QlikLexer": (
        "pygments.lexers.qlik",
        "Qlik",
        ("qlik", "qlikview", "qliksense", "qlikscript"),
        ("*.qvs", "*.qvw"),
        (),
    ),
    "QmlLexer": (
        "pygments.lexers.webmisc",
        "QML",
        ("qml", "qbs"),
        ("*.qml", "*.qbs"),
        ("application/x-qml", "application/x-qt.qbs+qml"),
    ),
    "RConsoleLexer": (
        "pygments.lexers.r",
        "RConsole",
        ("rconsole", "rout"),
        ("*.Rout",),
        (),
    ),
    "RNCCompactLexer": (
        "pygments.lexers.rnc",
        "Relax-NG Compact",
        ("rng-compact", "rnc"),
        ("*.rnc",),
        (),
    ),
    "RPMSpecLexer": (
        "pygments.lexers.installers",
        "RPMSpec",
        ("spec",),
        ("*.spec",),
        ("text/x-rpm-spec",),
    ),
    "RacketLexer": (
        "pygments.lexers.lisp",
        "Racket",
        ("racket", "rkt"),
        ("*.rkt", "*.rktd", "*.rktl"),
        ("text/x-racket", "application/x-racket"),
    ),
    "RagelCLexer": (
        "pygments.lexers.parsers",
        "Ragel in C Host",
        ("ragel-c",),
        ("*.rl",),
        (),
    ),
    "RagelCppLexer": (
        "pygments.lexers.parsers",
        "Ragel in CPP Host",
        ("ragel-cpp",),
        ("*.rl",),
        (),
    ),
    "RagelDLexer": (
        "pygments.lexers.parsers",
        "Ragel in D Host",
        ("ragel-d",),
        ("*.rl",),
        (),
    ),
    "RagelEmbeddedLexer": (
        "pygments.lexers.parsers",
        "Embedded Ragel",
        ("ragel-em",),
        ("*.rl",),
        (),
    ),
    "RagelJavaLexer": (
        "pygments.lexers.parsers",
        "Ragel in Java Host",
        ("ragel-java",),
        ("*.rl",),
        (),
    ),
    "RagelLexer": ("pygments.lexers.parsers", "Ragel", ("ragel",), (), ()),
    "RagelObjectiveCLexer": (
        "pygments.lexers.parsers",
        "Ragel in Objective C Host",
        ("ragel-objc",),
        ("*.rl",),
        (),
    ),
    "RagelRubyLexer": (
        "pygments.lexers.parsers",
        "Ragel in Ruby Host",
        ("ragel-ruby", "ragel-rb"),
        ("*.rl",),
        (),
    ),
    "RawTokenLexer": (
        "pygments.lexers.special",
        "Raw token data",
        (),
        (),
        ("application/x-pygments-tokens",),
    ),
    "RdLexer": ("pygments.lexers.r", "Rd", ("rd",), ("*.Rd",), ("text/x-r-doc",)),
    "ReasonLexer": (
        "pygments.lexers.ml",
        "ReasonML",
        ("reasonml", "reason"),
        ("*.re", "*.rei"),
        ("text/x-reasonml",),
    ),
    "RebolLexer": (
        "pygments.lexers.rebol",
        "REBOL",
        ("rebol",),
        ("*.r", "*.r3", "*.reb"),
        ("text/x-rebol",),
    ),
    "RedLexer": (
        "pygments.lexers.rebol",
        "Red",
        ("red", "red/system"),
        ("*.red", "*.reds"),
        ("text/x-red", "text/x-red-system"),
    ),
    "RedcodeLexer": (
        "pygments.lexers.esoteric",
        "Redcode",
        ("redcode",),
        ("*.cw",),
        (),
    ),
    "RegeditLexer": (
        "pygments.lexers.configs",
        "reg",
        ("registry",),
        ("*.reg",),
        ("text/x-windows-registry",),
    ),
    "ResourceLexer": (
        "pygments.lexers.resource",
        "ResourceBundle",
        ("resourcebundle", "resource"),
        (),
        (),
    ),
    "RexxLexer": (
        "pygments.lexers.scripting",
        "Rexx",
        ("rexx", "arexx"),
        ("*.rexx", "*.rex", "*.rx", "*.arexx"),
        ("text/x-rexx",),
    ),
    "RhtmlLexer": (
        "pygments.lexers.templates",
        "RHTML",
        ("rhtml", "html+erb", "html+ruby"),
        ("*.rhtml",),
        ("text/html+ruby",),
    ),
    "RideLexer": (
        "pygments.lexers.ride",
        "Ride",
        ("ride",),
        ("*.ride",),
        ("text/x-ride",),
    ),
    "RitaLexer": (
        "pygments.lexers.rita",
        "Rita",
        ("rita",),
        ("*.rita",),
        ("text/rita",),
    ),
    "RoboconfGraphLexer": (
        "pygments.lexers.roboconf",
        "Roboconf Graph",
        ("roboconf-graph",),
        ("*.graph",),
        (),
    ),
    "RoboconfInstancesLexer": (
        "pygments.lexers.roboconf",
        "Roboconf Instances",
        ("roboconf-instances",),
        ("*.instances",),
        (),
    ),
    "RobotFrameworkLexer": (
        "pygments.lexers.robotframework",
        "RobotFramework",
        ("robotframework",),
        ("*.robot", "*.resource"),
        ("text/x-robotframework",),
    ),
    "RqlLexer": ("pygments.lexers.sql", "RQL", ("rql",), ("*.rql",), ("text/x-rql",)),
    "RslLexer": ("pygments.lexers.dsls", "RSL", ("rsl",), ("*.rsl",), ("text/rsl",)),
    "RstLexer": (
        "pygments.lexers.markup",
        "reStructuredText",
        ("restructuredtext", "rst", "rest"),
        ("*.rst", "*.rest"),
        ("text/x-rst", "text/prs.fallenstein.rst"),
    ),
    "RtsLexer": (
        "pygments.lexers.trafficscript",
        "TrafficScript",
        ("trafficscript", "rts"),
        ("*.rts",),
        (),
    ),
    "RubyConsoleLexer": (
        "pygments.lexers.ruby",
        "Ruby irb session",
        ("rbcon", "irb"),
        (),
        ("text/x-ruby-shellsession",),
    ),
    "RubyLexer": (
        "pygments.lexers.ruby",
        "Ruby",
        ("ruby", "rb", "duby"),
        (
            "*.rb",
            "*.rbw",
            "Rakefile",
            "*.rake",
            "*.gemspec",
            "*.rbx",
            "*.duby",
            "Gemfile",
            "Vagrantfile",
        ),
        ("text/x-ruby", "application/x-ruby"),
    ),
    "RustLexer": (
        "pygments.lexers.rust",
        "Rust",
        ("rust", "rs"),
        ("*.rs", "*.rs.in"),
        ("text/rust", "text/x-rust"),
    ),
    "SASLexer": (
        "pygments.lexers.sas",
        "SAS",
        ("sas",),
        ("*.SAS", "*.sas"),
        ("text/x-sas", "text/sas", "application/x-sas"),
    ),
    "SLexer": (
        "pygments.lexers.r",
        "S",
        ("splus", "s", "r"),
        ("*.S", "*.R", ".Rhistory", ".Rprofile", ".Renviron"),
        (
            "text/S-plus",
            "text/S",
            "text/x-r-source",
            "text/x-r",
            "text/x-R",
            "text/x-r-history",
            "text/x-r-profile",
        ),
    ),
    "SMLLexer": (
        "pygments.lexers.ml",
        "Standard ML",
        ("sml",),
        ("*.sml", "*.sig", "*.fun"),
        ("text/x-standardml", "application/x-standardml"),
    ),
    "SNBTLexer": (
        "pygments.lexers.minecraft",
        "SNBT",
        ("snbt",),
        ("*.snbt",),
        ("text/snbt",),
    ),
    "SarlLexer": (
        "pygments.lexers.jvm",
        "SARL",
        ("sarl",),
        ("*.sarl",),
        ("text/x-sarl",),
    ),
    "SassLexer": (
        "pygments.lexers.css",
        "Sass",
        ("sass",),
        ("*.sass",),
        ("text/x-sass",),
    ),
    "SaviLexer": ("pygments.lexers.savi", "Savi", ("savi",), ("*.savi",), ()),
    "ScalaLexer": (
        "pygments.lexers.jvm",
        "Scala",
        ("scala",),
        ("*.scala",),
        ("text/x-scala",),
    ),
    "ScamlLexer": (
        "pygments.lexers.html",
        "Scaml",
        ("scaml",),
        ("*.scaml",),
        ("text/x-scaml",),
    ),
    "ScdocLexer": (
        "pygments.lexers.scdoc",
        "scdoc",
        ("scdoc", "scd"),
        ("*.scd", "*.scdoc"),
        (),
    ),
    "SchemeLexer": (
        "pygments.lexers.lisp",
        "Scheme",
        ("scheme", "scm"),
        ("*.scm", "*.ss"),
        ("text/x-scheme", "application/x-scheme"),
    ),
    "ScilabLexer": (
        "pygments.lexers.matlab",
        "Scilab",
        ("scilab",),
        ("*.sci", "*.sce", "*.tst"),
        ("text/scilab",),
    ),
    "ScssLexer": (
        "pygments.lexers.css",
        "SCSS",
        ("scss",),
        ("*.scss",),
        ("text/x-scss",),
    ),
    "SedLexer": (
        "pygments.lexers.textedit",
        "Sed",
        ("sed", "gsed", "ssed"),
        ("*.sed", "*.[gs]sed"),
        ("text/x-sed",),
    ),
    "ShExCLexer": (
        "pygments.lexers.rdf",
        "ShExC",
        ("shexc", "shex"),
        ("*.shex",),
        ("text/shex",),
    ),
    "ShenLexer": (
        "pygments.lexers.lisp",
        "Shen",
        ("shen",),
        ("*.shen",),
        ("text/x-shen", "application/x-shen"),
    ),
    "SieveLexer": (
        "pygments.lexers.sieve",
        "Sieve",
        ("sieve",),
        ("*.siv", "*.sieve"),
        (),
    ),
    "SilverLexer": (
        "pygments.lexers.verification",
        "Silver",
        ("silver",),
        ("*.sil", "*.vpr"),
        (),
    ),
    "SingularityLexer": (
        "pygments.lexers.configs",
        "Singularity",
        ("singularity",),
        ("*.def", "Singularity"),
        (),
    ),
    "SlashLexer": ("pygments.lexers.slash", "Slash", ("slash",), ("*.sla",), ()),
    "SlimLexer": (
        "pygments.lexers.webmisc",
        "Slim",
        ("slim",),
        ("*.slim",),
        ("text/x-slim",),
    ),
    "SlurmBashLexer": (
        "pygments.lexers.shell",
        "Slurm",
        ("slurm", "sbatch"),
        ("*.sl",),
        (),
    ),
    "SmaliLexer": (
        "pygments.lexers.dalvik",
        "Smali",
        ("smali",),
        ("*.smali",),
        ("text/smali",),
    ),
    "SmalltalkLexer": (
        "pygments.lexers.smalltalk",
        "Smalltalk",
        ("smalltalk", "squeak", "st"),
        ("*.st",),
        ("text/x-smalltalk",),
    ),
    "SmartGameFormatLexer": (
        "pygments.lexers.sgf",
        "SmartGameFormat",
        ("sgf",),
        ("*.sgf",),
        (),
    ),
    "SmartyLexer": (
        "pygments.lexers.templates",
        "Smarty",
        ("smarty",),
        ("*.tpl",),
        ("application/x-smarty",),
    ),
    "SmithyLexer": ("pygments.lexers.smithy", "Smithy", ("smithy",), ("*.smithy",), ()),
    "SnobolLexer": (
        "pygments.lexers.snobol",
        "Snobol",
        ("snobol",),
        ("*.snobol",),
        ("text/x-snobol",),
    ),
    "SnowballLexer": (
        "pygments.lexers.dsls",
        "Snowball",
        ("snowball",),
        ("*.sbl",),
        (),
    ),
    "SolidityLexer": (
        "pygments.lexers.solidity",
        "Solidity",
        ("solidity",),
        ("*.sol",),
        (),
    ),
    "SophiaLexer": ("pygments.lexers.sophia", "Sophia", ("sophia",), ("*.aes",), ()),
    "SourcePawnLexer": (
        "pygments.lexers.pawn",
        "SourcePawn",
        ("sp",),
        ("*.sp",),
        ("text/x-sourcepawn",),
    ),
    "SourcesListLexer": (
        "pygments.lexers.installers",
        "Debian Sourcelist",
        ("debsources", "sourceslist", "sources.list"),
        ("sources.list",),
        (),
    ),
    "SparqlLexer": (
        "pygments.lexers.rdf",
        "SPARQL",
        ("sparql",),
        ("*.rq", "*.sparql"),
        ("application/sparql-query",),
    ),
    "SpiceLexer": (
        "pygments.lexers.spice",
        "Spice",
        ("spice", "spicelang"),
        ("*.spice",),
        ("text/x-spice",),
    ),
    "SqlJinjaLexer": (
        "pygments.lexers.templates",
        "SQL+Jinja",
        ("sql+jinja",),
        ("*.sql", "*.sql.j2", "*.sql.jinja2"),
        (),
    ),
    "SqlLexer": ("pygments.lexers.sql", "SQL", ("sql",), ("*.sql",), ("text/x-sql",)),
    "SqliteConsoleLexer": (
        "pygments.lexers.sql",
        "sqlite3con",
        ("sqlite3",),
        ("*.sqlite3-console",),
        ("text/x-sqlite3-console",),
    ),
    "SquidConfLexer": (
        "pygments.lexers.configs",
        "SquidConf",
        ("squidconf", "squid.conf", "squid"),
        ("squid.conf",),
        ("text/x-squidconf",),
    ),
    "SrcinfoLexer": (
        "pygments.lexers.srcinfo",
        "Srcinfo",
        ("srcinfo",),
        (".SRCINFO",),
        (),
    ),
    "SspLexer": (
        "pygments.lexers.templates",
        "Scalate Server Page",
        ("ssp",),
        ("*.ssp",),
        ("application/x-ssp",),
    ),
    "StanLexer": ("pygments.lexers.modeling", "Stan", ("stan",), ("*.stan",), ()),
    "StataLexer": (
        "pygments.lexers.stata",
        "Stata",
        ("stata", "do"),
        ("*.do", "*.ado"),
        ("text/x-stata", "text/stata", "application/x-stata"),
    ),
    "SuperColliderLexer": (
        "pygments.lexers.supercollider",
        "SuperCollider",
        ("supercollider", "sc"),
        ("*.sc", "*.scd"),
        ("application/supercollider", "text/supercollider"),
    ),
    "SwiftLexer": (
        "pygments.lexers.objective",
        "Swift",
        ("swift",),
        ("*.swift",),
        ("text/x-swift",),
    ),
    "SwigLexer": (
        "pygments.lexers.c_like",
        "SWIG",
        ("swig",),
        ("*.swg", "*.i"),
        ("text/swig",),
    ),
    "SystemVerilogLexer": (
        "pygments.lexers.hdl",
        "systemverilog",
        ("systemverilog", "sv"),
        ("*.sv", "*.svh"),
        ("text/x-systemverilog",),
    ),
    "TAPLexer": ("pygments.lexers.testing", "TAP", ("tap",), ("*.tap",), ()),
    "TNTLexer": (
        "pygments.lexers.tnt",
        "Typographic Number Theory",
        ("tnt",),
        ("*.tnt",),
        (),
    ),
    "TOMLLexer": (
        "pygments.lexers.configs",
        "TOML",
        ("toml",),
        ("*.toml", "Pipfile", "poetry.lock"),
        (),
    ),
    "Tads3Lexer": ("pygments.lexers.int_fiction", "TADS 3", ("tads3",), ("*.t",), ()),
    "TalLexer": (
        "pygments.lexers.tal",
        "Tal",
        ("tal", "uxntal"),
        ("*.tal",),
        ("text/x-uxntal",),
    ),
    "TasmLexer": (
        "pygments.lexers.asm",
        "TASM",
        ("tasm",),
        ("*.asm", "*.ASM", "*.tasm"),
        ("text/x-tasm",),
    ),
    "TclLexer": (
        "pygments.lexers.tcl",
        "Tcl",
        ("tcl",),
        ("*.tcl", "*.rvt"),
        ("text/x-tcl", "text/x-script.tcl", "application/x-tcl"),
    ),
    "TcshLexer": (
        "pygments.lexers.shell",
        "Tcsh",
        ("tcsh", "csh"),
        ("*.tcsh", "*.csh"),
        ("application/x-csh",),
    ),
    "TcshSessionLexer": ("pygments.lexers.shell", "Tcsh Session", ("tcshcon",), (), ()),
    "TeaTemplateLexer": (
        "pygments.lexers.templates",
        "Tea",
        ("tea",),
        ("*.tea",),
        ("text/x-tea",),
    ),
    "TealLexer": ("pygments.lexers.teal", "teal", ("teal",), ("*.teal",), ()),
    "TeraTermLexer": (
        "pygments.lexers.teraterm",
        "Tera Term macro",
        ("teratermmacro", "teraterm", "ttl"),
        ("*.ttl",),
        ("text/x-teratermmacro",),
    ),
    "TermcapLexer": (
        "pygments.lexers.configs",
        "Termcap",
        ("termcap",),
        ("termcap", "termcap.src"),
        (),
    ),
    "TerminfoLexer": (
        "pygments.lexers.configs",
        "Terminfo",
        ("terminfo",),
        ("terminfo", "terminfo.src"),
        (),
    ),
    "TerraformLexer": (
        "pygments.lexers.configs",
        "Terraform",
        ("terraform", "tf", "hcl"),
        ("*.tf", "*.hcl"),
        ("application/x-tf", "application/x-terraform"),
    ),
    "TexLexer": (
        "pygments.lexers.markup",
        "TeX",
        ("tex", "latex"),
        ("*.tex", "*.aux", "*.toc"),
        ("text/x-tex", "text/x-latex"),
    ),
    "TextLexer": (
        "pygments.lexers.special",
        "Text only",
        ("text",),
        ("*.txt",),
        ("text/plain",),
    ),
    "ThingsDBLexer": (
        "pygments.lexers.thingsdb",
        "ThingsDB",
        ("ti", "thingsdb"),
        ("*.ti",),
        (),
    ),
    "ThriftLexer": (
        "pygments.lexers.dsls",
        "Thrift",
        ("thrift",),
        ("*.thrift",),
        ("application/x-thrift",),
    ),
    "TiddlyWiki5Lexer": (
        "pygments.lexers.markup",
        "tiddler",
        ("tid",),
        ("*.tid",),
        ("text/vnd.tiddlywiki",),
    ),
    "TlbLexer": ("pygments.lexers.tlb", "Tl-b", ("tlb",), ("*.tlb",), ()),
    "TodotxtLexer": (
        "pygments.lexers.textfmts",
        "Todotxt",
        ("todotxt",),
        ("todo.txt", "*.todotxt"),
        ("text/x-todo",),
    ),
    "TransactSqlLexer": (
        "pygments.lexers.sql",
        "Transact-SQL",
        ("tsql", "t-sql"),
        ("*.sql",),
        ("text/x-tsql",),
    ),
    "TreetopLexer": (
        "pygments.lexers.parsers",
        "Treetop",
        ("treetop",),
        ("*.treetop", "*.tt"),
        (),
    ),
    "TurtleLexer": (
        "pygments.lexers.rdf",
        "Turtle",
        ("turtle",),
        ("*.ttl",),
        ("text/turtle", "application/x-turtle"),
    ),
    "TwigHtmlLexer": (
        "pygments.lexers.templates",
        "HTML+Twig",
        ("html+twig",),
        ("*.twig",),
        ("text/html+twig",),
    ),
    "TwigLexer": (
        "pygments.lexers.templates",
        "Twig",
        ("twig",),
        (),
        ("application/x-twig",),
    ),
    "TypeScriptLexer": (
        "pygments.lexers.javascript",
        "TypeScript",
        ("typescript", "ts"),
        ("*.ts",),
        ("application/x-typescript", "text/x-typescript"),
    ),
    "TypoScriptCssDataLexer": (
        "pygments.lexers.typoscript",
        "TypoScriptCssData",
        ("typoscriptcssdata",),
        (),
        (),
    ),
    "TypoScriptHtmlDataLexer": (
        "pygments.lexers.typoscript",
        "TypoScriptHtmlData",
        ("typoscripthtmldata",),
        (),
        (),
    ),
    "TypoScriptLexer": (
        "pygments.lexers.typoscript",
        "TypoScript",
        ("typoscript",),
        ("*.typoscript",),
        ("text/x-typoscript",),
    ),
    "UL4Lexer": ("pygments.lexers.ul4", "UL4", ("ul4",), ("*.ul4",), ()),
    "UcodeLexer": (
        "pygments.lexers.unicon",
        "ucode",
        ("ucode",),
        ("*.u", "*.u1", "*.u2"),
        (),
    ),
    "UniconLexer": (
        "pygments.lexers.unicon",
        "Unicon",
        ("unicon",),
        ("*.icn",),
        ("text/unicon",),
    ),
    "UnixConfigLexer": (
        "pygments.lexers.configs",
        "Unix/Linux config files",
        ("unixconfig", "linuxconfig"),
        (),
        (),
    ),
    "UrbiscriptLexer": (
        "pygments.lexers.urbi",
        "UrbiScript",
        ("urbiscript",),
        ("*.u",),
        ("application/x-urbiscript",),
    ),
    "UsdLexer": (
        "pygments.lexers.usd",
        "USD",
        ("usd", "usda"),
        ("*.usd", "*.usda"),
        (),
    ),
    "VBScriptLexer": (
        "pygments.lexers.basic",
        "VBScript",
        ("vbscript",),
        ("*.vbs", "*.VBS"),
        (),
    ),
    "VCLLexer": (
        "pygments.lexers.varnish",
        "VCL",
        ("vcl",),
        ("*.vcl",),
        ("text/x-vclsrc",),
    ),
    "VCLSnippetLexer": (
        "pygments.lexers.varnish",
        "VCLSnippets",
        ("vclsnippets", "vclsnippet"),
        (),
        ("text/x-vclsnippet",),
    ),
    "VCTreeStatusLexer": (
        "pygments.lexers.console",
        "VCTreeStatus",
        ("vctreestatus",),
        (),
        (),
    ),
    "VGLLexer": ("pygments.lexers.dsls", "VGL", ("vgl",), ("*.rpf",), ()),
    "ValaLexer": (
        "pygments.lexers.c_like",
        "Vala",
        ("vala", "vapi"),
        ("*.vala", "*.vapi"),
        ("text/x-vala",),
    ),
    "VbNetAspxLexer": (
        "pygments.lexers.dotnet",
        "aspx-vb",
        ("aspx-vb",),
        ("*.aspx", "*.asax", "*.ascx", "*.ashx", "*.asmx", "*.axd"),
        (),
    ),
    "VbNetLexer": (
        "pygments.lexers.dotnet",
        "VB.net",
        ("vb.net", "vbnet", "lobas", "oobas", "sobas"),
        ("*.vb", "*.bas"),
        ("text/x-vbnet", "text/x-vba"),
    ),
    "VelocityHtmlLexer": (
        "pygments.lexers.templates",
        "HTML+Velocity",
        ("html+velocity",),
        (),
        ("text/html+velocity",),
    ),
    "VelocityLexer": (
        "pygments.lexers.templates",
        "Velocity",
        ("velocity",),
        ("*.vm", "*.fhtml"),
        (),
    ),
    "VelocityXmlLexer": (
        "pygments.lexers.templates",
        "XML+Velocity",
        ("xml+velocity",),
        (),
        ("application/xml+velocity",),
    ),
    "VerilogLexer": (
        "pygments.lexers.hdl",
        "verilog",
        ("verilog", "v"),
        ("*.v",),
        ("text/x-verilog",),
    ),
    "VhdlLexer": (
        "pygments.lexers.hdl",
        "vhdl",
        ("vhdl",),
        ("*.vhdl", "*.vhd"),
        ("text/x-vhdl",),
    ),
    "VimLexer": (
        "pygments.lexers.textedit",
        "VimL",
        ("vim",),
        (
            "*.vim",
            ".vimrc",
            ".exrc",
            ".gvimrc",
            "_vimrc",
            "_exrc",
            "_gvimrc",
            "vimrc",
            "gvimrc",
        ),
        ("text/x-vim",),
    ),
    "WDiffLexer": ("pygments.lexers.diff", "WDiff", ("wdiff",), ("*.wdiff",), ()),
    "WatLexer": (
        "pygments.lexers.webassembly",
        "WebAssembly",
        ("wast", "wat"),
        ("*.wat", "*.wast"),
        (),
    ),
    "WebIDLLexer": (
        "pygments.lexers.webidl",
        "Web IDL",
        ("webidl",),
        ("*.webidl",),
        (),
    ),
    "WgslLexer": (
        "pygments.lexers.wgsl",
        "WebGPU Shading Language",
        ("wgsl",),
        ("*.wgsl",),
        ("text/wgsl",),
    ),
    "WhileyLexer": (
        "pygments.lexers.whiley",
        "Whiley",
        ("whiley",),
        ("*.whiley",),
        ("text/x-whiley",),
    ),
    "WikitextLexer": (
        "pygments.lexers.markup",
        "Wikitext",
        ("wikitext", "mediawiki"),
        (),
        ("text/x-wiki",),
    ),
    "WoWTocLexer": (
        "pygments.lexers.wowtoc",
        "World of Warcraft TOC",
        ("wowtoc",),
        ("*.toc",),
        (),
    ),
    "WrenLexer": ("pygments.lexers.wren", "Wren", ("wren",), ("*.wren",), ()),
    "X10Lexer": (
        "pygments.lexers.x10",
        "X10",
        ("x10", "xten"),
        ("*.x10",),
        ("text/x-x10",),
    ),
    "XMLUL4Lexer": ("pygments.lexers.ul4", "XML+UL4", ("xml+ul4",), ("*.xmlul4",), ()),
    "XQueryLexer": (
        "pygments.lexers.webmisc",
        "XQuery",
        ("xquery", "xqy", "xq", "xql", "xqm"),
        ("*.xqy", "*.xquery", "*.xq", "*.xql", "*.xqm"),
        ("text/xquery", "application/xquery"),
    ),
    "XmlDjangoLexer": (
        "pygments.lexers.templates",
        "XML+Django/Jinja",
        ("xml+django", "xml+jinja"),
        ("*.xml.j2", "*.xml.jinja2"),
        ("application/xml+django", "application/xml+jinja"),
    ),
    "XmlErbLexer": (
        "pygments.lexers.templates",
        "XML+Ruby",
        ("xml+ruby", "xml+erb"),
        (),
        ("application/xml+ruby",),
    ),
    "XmlLexer": (
        "pygments.lexers.html",
        "XML",
        ("xml",),
        ("*.xml", "*.xsl", "*.rss", "*.xslt", "*.xsd", "*.wsdl", "*.wsf"),
        (
            "text/xml",
            "application/xml",
            "image/svg+xml",
            "application/rss+xml",
            "application/atom+xml",
        ),
    ),
    "XmlPhpLexer": (
        "pygments.lexers.templates",
        "XML+PHP",
        ("xml+php",),
        (),
        ("application/xml+php",),
    ),
    "XmlSmartyLexer": (
        "pygments.lexers.templates",
        "XML+Smarty",
        ("xml+smarty",),
        (),
        ("application/xml+smarty",),
    ),
    "XorgLexer": ("pygments.lexers.xorg", "Xorg", ("xorg.conf",), ("xorg.conf",), ()),
    "XppLexer": ("pygments.lexers.dotnet", "X++", ("xpp", "x++"), ("*.xpp",), ()),
    "XsltLexer": (
        "pygments.lexers.html",
        "XSLT",
        ("xslt",),
        ("*.xsl", "*.xslt", "*.xpl"),
        ("application/xsl+xml", "application/xslt+xml"),
    ),
    "XtendLexer": (
        "pygments.lexers.jvm",
        "Xtend",
        ("xtend",),
        ("*.xtend",),
        ("text/x-xtend",),
    ),
    "XtlangLexer": ("pygments.lexers.lisp", "xtlang", ("extempore",), ("*.xtm",), ()),
    "YamlJinjaLexer": (
        "pygments.lexers.templates",
        "YAML+Jinja",
        ("yaml+jinja", "salt", "sls"),
        ("*.sls", "*.yaml.j2", "*.yml.j2", "*.yaml.jinja2", "*.yml.jinja2"),
        ("text/x-yaml+jinja", "text/x-sls"),
    ),
    "YamlLexer": (
        "pygments.lexers.data",
        "YAML",
        ("yaml",),
        ("*.yaml", "*.yml"),
        ("text/x-yaml",),
    ),
    "YangLexer": (
        "pygments.lexers.yang",
        "YANG",
        ("yang",),
        ("*.yang",),
        ("application/yang",),
    ),
    "ZeekLexer": (
        "pygments.lexers.dsls",
        "Zeek",
        ("zeek", "bro"),
        ("*.zeek", "*.bro"),
        (),
    ),
    "ZephirLexer": ("pygments.lexers.php", "Zephir", ("zephir",), ("*.zep",), ()),
    "ZigLexer": ("pygments.lexers.zig", "Zig", ("zig",), ("*.zig",), ("text/zig",)),
    "apdlexer": (
        "pygments.lexers.apdlexer",
        "ANSYS parametric design language",
        ("ansys", "apdl"),
        ("*.ans",),
        (),
    ),
}
