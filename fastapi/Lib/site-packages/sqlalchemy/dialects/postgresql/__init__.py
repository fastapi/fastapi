# postgresql/__init__.py
# Copyright (C) 2005-2022 the SQLAlchemy authors and contributors
# <see AUTHORS file>
#
# This module is part of SQLAlchemy and is released under
# the MIT License: https://www.opensource.org/licenses/mit-license.php
from ...util import compat
from . import (
    base,
    pg8000,  # noqa
    psycopg2,  # noqa
    psycopg2cffi,  # noqa
    pygresql,  # noqa
    pypostgresql,  # noqa
)
from .array import ARRAY, All, Any, array
from .base import (
    BIGINT,
    BIT,
    BOOLEAN,
    BYTEA,
    CHAR,
    CIDR,
    DATE,
    DOUBLE_PRECISION,
    ENUM,
    FLOAT,
    INET,
    INTEGER,
    INTERVAL,
    MACADDR,
    MONEY,
    NUMERIC,
    OID,
    REAL,
    REGCLASS,
    SMALLINT,
    TEXT,
    TIME,
    TIMESTAMP,
    TSVECTOR,
    UUID,
    VARCHAR,
    CreateEnumType,
    DropEnumType,
)
from .dml import Insert, insert
from .ext import ExcludeConstraint, aggregate_order_by, array_agg
from .hstore import HSTORE, hstore
from .json import JSON, JSONB
from .ranges import DATERANGE, INT4RANGE, INT8RANGE, NUMRANGE, TSRANGE, TSTZRANGE

if compat.py3k:
    from . import asyncpg  # noqa

base.dialect = dialect = psycopg2.dialect


__all__ = (
    "INTEGER",
    "BIGINT",
    "SMALLINT",
    "VARCHAR",
    "CHAR",
    "TEXT",
    "NUMERIC",
    "FLOAT",
    "REAL",
    "INET",
    "CIDR",
    "UUID",
    "BIT",
    "MACADDR",
    "MONEY",
    "OID",
    "REGCLASS",
    "DOUBLE_PRECISION",
    "TIMESTAMP",
    "TIME",
    "DATE",
    "BYTEA",
    "BOOLEAN",
    "INTERVAL",
    "ARRAY",
    "ENUM",
    "dialect",
    "array",
    "HSTORE",
    "hstore",
    "INT4RANGE",
    "INT8RANGE",
    "NUMRANGE",
    "DATERANGE",
    "TSVECTOR",
    "TSRANGE",
    "TSTZRANGE",
    "JSON",
    "JSONB",
    "Any",
    "All",
    "DropEnumType",
    "CreateEnumType",
    "ExcludeConstraint",
    "aggregate_order_by",
    "array_agg",
    "insert",
    "Insert",
)
