# engine/__init__.py
# Copyright (C) 2005-2022 the SQLAlchemy authors and contributors
# <see AUTHORS file>
#
# This module is part of SQLAlchemy and is released under
# the MIT License: https://www.opensource.org/licenses/mit-license.php

"""SQL connections, SQL execution and high-level DB-API interface.

The engine package defines the basic components used to interface
DB-API modules with higher-level statement construction,
connection-management, execution and result contexts.  The primary
"entry point" class into this package is the Engine and its public
constructor ``create_engine()``.

"""

from ..sql import ddl
from . import events, util
from .base import (
    Connection,
    Engine,
    NestedTransaction,
    RootTransaction,
    Transaction,
    TwoPhaseTransaction,
)
from .create import create_engine, engine_from_config
from .cursor import (
    BaseCursorResult,
    BufferedColumnResultProxy,
    BufferedColumnRow,
    BufferedRowResultProxy,
    CursorResult,
    FullyBufferedResultProxy,
    LegacyCursorResult,
    ResultProxy,
)
from .interfaces import (
    AdaptedConnection,
    Compiled,
    Connectable,
    CreateEnginePlugin,
    Dialect,
    ExceptionContext,
    ExecutionContext,
    TypeCompiler,
)
from .mock import create_mock_engine
from .reflection import Inspector
from .result import (
    ChunkedIteratorResult,
    FilterResult,
    FrozenResult,
    IteratorResult,
    MappingResult,
    MergedResult,
    Result,
    ScalarResult,
    result_tuple,
)
from .row import BaseRow, LegacyRow, Row, RowMapping
from .url import URL, make_url
from .util import connection_memoize
