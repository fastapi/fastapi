"""
passlib.hash - proxy object mapping hash scheme names -> handlers

==================
***** NOTICE *****
==================

This module does not actually contain any hashes. This file
is a stub that replaces itself with a proxy object.

This proxy object (passlib.registry._PasslibRegistryProxy)
handles lazy-loading hashes as they are requested.

The actual implementation of the various hashes is store elsewhere,
mainly in the submodules of the ``passlib.handlers`` subpackage.
"""

# =============================================================================
# import proxy object and replace this module
# =============================================================================

# XXX: if any platform has problem w/ lazy modules, could support 'non-lazy'
#      version which just imports all schemes known to list_crypt_handlers()

import sys

from passlib.registry import _proxy

sys.modules[__name__] = _proxy

# =============================================================================
# HACK: the following bit of code is unreachable, but it's presence seems to
#       help make autocomplete work for certain IDEs such as PyCharm.
#       this list is automatically regenerated using $SOURCE/admin/regen.py
# =============================================================================

# ----------------------------------------------------
# begin autocomplete hack (autogenerated 2016-11-10)
# ----------------------------------------------------
if False:
    pass
# ----------------------------------------------------
# end autocomplete hack
# ----------------------------------------------------

# =============================================================================
# eoc
# =============================================================================
